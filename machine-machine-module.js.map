{"version":3,"sources":["webpack:///./src/app/machine/machine.module.ts","webpack:///./src/app/machine/machine.page.html","webpack:///./src/app/machine/machine.page.scss","webpack:///./src/app/machine/machine.page.ts"],"names":[],"mappings":"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","file":"machine-machine-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { MachinePage } from './machine.page';\nimport { from } from 'rxjs';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    A11yModule,\n    HttpClientModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: MachinePage\n      }\n    ])\n  ],\n  declarations: [MachinePage]\n})\nexport class MachinePageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>\\n            Changing Time\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-list-header color=\\\"light\\\">\\n        <ion-label>Data for September 2019</ion-label>\\n    </ion-list-header>\\n\\n    <ion-card class=\\\"welcome-card\\\">\\n\\n        <ion-card-header>\\n            <ion-card-subtitle>Percentage of Changing Time Based On</ion-card-subtitle>\\n            <ion-card-title>Device Name</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            <canvas #hrzBarChart5></canvas>\\n        </ion-card-content>\\n    </ion-card>\\n\\n    <!-- <ion-card>\\n        <ion-button (click)=\\\"callWS()\\\">THIS IS A BUTTON</ion-button>\\n    </ion-card> -->\\n\\n</ion-content>\"","module.exports = \".welcome-card img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\np.text-center {\\n  text-align: center; }\\n\\n.example-tab-icon {\\n  margin-right: 8px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94aWFuZ3dlaS9Eb2N1bWVudHMvaW5zaWdodC9zcmMvYXBwL21hY2hpbmUvbWFjaGluZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWNoaW5lL21hY2hpbmUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndlbGNvbWUtY2FyZCBpbWcge1xuICAgIG1heC1oZWlnaHQ6IDM1dmg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxucC50ZXh0LWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZXhhbXBsZS10YWItaWNvbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG59Il19 */\"","import { Component, ViewChild } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { stacked100 } from 'chartjs-plugin-stacked100';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { BaseService } from '../services/base.service';\nimport { Constants } from '../data-model/constant.model';\nimport { DeviceModel, UsageOrImpressionModel } from '../data-model/base.model';\nimport { Storage } from '@ionic/storage';\nimport { AlertController } from '@ionic/angular';\n\nrequire('chartjs-plugin-stacked100');\n\n@Component({\n  selector: 'app-machine',\n  templateUrl: 'machine.page.html',\n  styleUrls: ['machine.page.scss'],\n})\n\nexport class MachinePage {\n\n  @ViewChild('hrzBarChart5') hrzBarChart5;\n\n  hrzBars5: any;\n  colorArray: any;\n  deviceData: any;\n\n  constructor(private service: BaseService, private storage: Storage, private alertController: AlertController) {\n\n    this.storage.get(Constants.c_ACCESS_TOKEN).then((val) => {\n\n      this.service.callWebService(Constants.k_DAILY_USAGE, new UsageOrImpressionModel(val, 'GL373', '2019-09-01', '2019-09-30'), (res) => {\n\n        const arrJSON = JSON.parse(res.data);\n        const strItem = arrJSON[0];\n        const strJSON = strItem[\"data\"];\n        this.deviceData = JSON.parse(strJSON)\n        console.log(\"\\n\\n\\nDATA: \", this.deviceData, \"\\n\\n\\n\");\n\n      });\n\n    });\n\n  }\n\n  ionViewDidEnter() {\n\n    this.generateColorArray(10);\n    this.createHrzBarChart5(this.deviceData);\n\n  }\n\n  generateColorArray(num) {\n    this.colorArray = [];\n    for (let i = 0; i < num; i++) {\n      this.colorArray.push('#' + Math.floor(Math.random() * 16777215).toString(16));\n    }\n  }\n\n  createHrzBarChart5(dataInput: any) {\n\n    let ctx = this.hrzBarChart5.nativeElement\n    ctx.height = 400;\n    this.hrzBars5 = new Chart(ctx, {\n      type: 'bar',\n      // data: datta,\n      data: {\n        labels: dataInput.labels,\n        datasets: dataInput.datasets\n      },\n      options: {\n        scales: {\n          xAxes: [{\n            barPercentage: 0.9,\n            gridLines: {\n              offsetGridLines: true\n            },\n            stacked: true\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            },\n            stacked: true\n          }]\n        }\n        // plugins: {\n        //   stacked100: { enable: true }\n        // },\n        //   scales: {\n        //     yAxes: [{\n        //         ticks: {\n        //             min: 0,\n        //             max: 100,\n        //             callback: function(value) {\n        //                 return value + \"%\"\n        //             }\n        //         },\n        //         stacked: true,\n        //         scaleLabel: {\n        //             display: true,\n        //             labelString: \"Percentage\"\n        //         }\n        //     }],\n        //     xAxes: [{\n        //       stacked: true\n        //     }]\n        //  }\n      }\n    });\n\n\n  }\n\n  onClick() {\n\n  }\n\n  random_rgb() {\n    var o = Math.round, r = Math.random, s = 255;\n    return 'rgb(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n  }\n\n  async presentAlert(message: string) {\n    const alert = await this.alertController.create({\n      header: 'Error',\n      subHeader: '',\n      message: message,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n    let result = await alert.onDidDismiss();\n    console.log(result);\n  }\n}"],"sourceRoot":""}