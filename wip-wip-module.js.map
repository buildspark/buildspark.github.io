{"version":3,"sources":["webpack:///./src/app/wip/wip.module.ts","webpack:///./src/app/wip/wip.page.html","webpack:///./src/app/wip/wip.page.scss","webpack:///./src/app/wip/wip.page.ts"],"names":[],"mappings":"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","file":"wip-wip-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { WipPage } from './wip.page';\nimport { from } from 'rxjs';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    A11yModule,\n    HttpClientModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: WipPage\n      }\n    ])\n  ],\n  declarations: [WipPage]\n})\nexport class WipPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <!-- <ion-menu-button></ion-menu-button> -->\\n      <ion-back-button></ion-back-button>\\n      <!-- <ion-button (click)=\\\"onClicked()\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button> -->\\n    </ion-buttons>\\n    <ion-title>\\n      WIP\\n    </ion-title>\\n    <!-- <ion-buttons slot=\\\"end\\\">\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"selectMachine()\\\">\\n        <ion-icon name=\\\"list-box\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons> -->\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"downloadcsv()\\\">\\n        <ion-icon name=\\\"download\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\">\\n          <div class=\\\"vertical-align-content\\\">\\n            <p>{{ isPack ? 'Packaging' : 'Non-Packaging' }}</p>\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <ion-toggle style=\\\"float: right;\\\" (ionChange)=\\\"updatePackaging($event)\\\" [checked]=\\\"isPack\\\"></ion-toggle>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-card>\\n\\n  <mat-tab-group #tabGroup [selectedIndex]=\\\"selectedTab\\\" (selectedTabChange)=\\\"onTabChanged($event)\\\">\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">query_builder</mat-icon>\\n        Hourly\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              On this day\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"DD MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"wipPackReqModel.date\\\" (ionChange)=\\\"onWipHourlySelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewWIPDateClicked()\\\">View data</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas [hidden]=\\\"isPack == true\\\" *ngFor=\\\"let chart of arrDailyCharts;\\\" [data]=\\\"chart\\\" [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n      <chart-canvas [hidden]=\\\"isPack == false\\\" *ngFor=\\\"let chart of arrDailyNonPackCharts;\\\" [data]=\\\"chart\\\" [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n\\n    <!-- <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">query_builder</mat-icon>\\n        Daily\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              On this day\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"DD MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"wipPackReqModel.date\\\" (ionChange)=\\\"onWipHourlySelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewWIPDateClicked()\\\">View date</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrDailyCharts;\\\" [data]=\\\"chart\\\" [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab> -->\\n\\n    <!-- <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">calendar_today</mat-icon>\\n        Monthly\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"monthlyReqModel.datefrom\\\" (ionChange)=\\\"onFromMonthlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"monthlyReqModel.dateto\\\" (ionChange)=\\\"onToMonthlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewMonthlyDateClicked()\\\">View date</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrMonthlyCharts;\\\" [data]=\\\"chart\\\"  [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">trending_up</mat-icon>\\n        Yearly\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"yearlyReqModel.datefrom\\\" (ionChange)=\\\"onFromYearlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"yearlyReqModel.dateto\\\" (ionChange)=\\\"onToYearlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewYearlyDateClicked()\\\">View date</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrYearlyCharts;\\\" [data]=\\\"chart\\\"  [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab> -->\\n  </mat-tab-group>\\n\\n</ion-content>\"","module.exports = \".welcome-card img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\np.text-center {\\n  text-align: center; }\\n\\n.example-tab-icon {\\n  margin-right: 8px; }\\n\\n.vertical-align-content > * {\\n  display: flex !important;\\n  align-content: center !important;\\n  align-items: center !important; }\\n\\n.center-ver {\\n  display: flex !important;\\n  align-content: center !important;\\n  align-items: center !important;\\n  float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94aWFuZ3dlaS9Eb2N1bWVudHMvSU9OSUNfUFJPSkVDVF9NQUlOL3NyYy9hcHAvd2lwL3dpcC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksaUJBQWlCLEVBQUE7O0FBR3JCO0VBRUssd0JBQXVCO0VBQ3ZCLGdDQUErQjtFQUMvQiw4QkFBNkIsRUFBQTs7QUFHbEM7RUFDSSx3QkFBdUI7RUFDdkIsZ0NBQStCO0VBQy9CLDhCQUE2QjtFQUM3QixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC93aXAvd2lwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNhcmQgaW1nIHtcbiAgICBtYXgtaGVpZ2h0OiAzNXZoO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbnAudGV4dC1jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmV4YW1wbGUtdGFiLWljb24ge1xuICAgIG1hcmdpbi1yaWdodDogOHB4O1xufVxuXG4udmVydGljYWwtYWxpZ24tY29udGVudCA+ICpcbntcbiAgICAgZGlzcGxheTogZmxleCFpbXBvcnRhbnQ7XG4gICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlciFpbXBvcnRhbnQ7XG4gICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIhaW1wb3J0YW50O1xufVxuXG4uY2VudGVyLXZlciB7XG4gICAgZGlzcGxheTogZmxleCFpbXBvcnRhbnQ7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyIWltcG9ydGFudDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyIWltcG9ydGFudDtcbiAgICBmbG9hdDogcmlnaHQ7XG59Il19 */\"","import { Component, ViewChild, ViewChildren, AfterViewInit, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { BaseService } from '../services/base.service';\nimport { Constants, WSTypeCode, config, WSPackageCode } from '../data-model/constant.model';\nimport { DeptModel, UsageOrImpressionModel, WIPModel, AccessTokenModel, EmailModel, DownloadCSVModel } from '../data-model/base.model';\nimport { Storage } from '@ionic/storage';\nimport * as moment from \"moment\";\nimport { IonSelect, AlertController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Observable, of, throwError } from 'rxjs';\nimport { forkJoin } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { stacked100 } from 'chartjs-plugin-stacked100';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { SelectMachineComponent } from '../shared/select-machine/select-machine.component';\nimport { BasePagePage } from '../shared/base-page/base-page.page';\n\nrequire('chartjs-plugin-stacked100');\n\n@Component({\n  selector: 'app-wip',\n  templateUrl: './wip.page.html',\n  styleUrls: ['./wip.page.scss'],\n})\nexport class WipPage extends BasePagePage implements OnInit {\n\n  @ViewChild('tabGroup') tabGroup;\n  @ViewChild('popSelect') selectPop: IonSelect;\n\n  data: any;\n  strChartTitle: string = '';\n  hrzBars5: any;\n  arrDailyCharts: any[] = [];\n  arrDailyNonPackCharts: any[] = [];\n  arrMonthlyCharts: any[] = [];\n  arrYearlyCharts: any[] = [];\n  customActionSheetOptions: any = {\n    header: 'Machines',\n    subHeader: 'Select the machine(s) you want to view'\n  };\n  arrDept: Array<any> = [];\n  // arrSelectedDept: Array<any> = [];\n  selectedTab: any = 0;\n  accessToken: string = '';\n  deptReqModel: DeptModel = new AccessTokenModel();\n  wipPackReqModel: WIPModel = new WIPModel(WSTypeCode.WIP);\n  wipNonPackReqModel: WIPModel = new WIPModel(WSTypeCode.WIP);\n  monthlyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n  yearlyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n  // emailReqModel: EmailModel = new EmailModel(WSTypeCode.WIP);\n  downloadCSVReqModel: DownloadCSVModel = new DownloadCSVModel(WSTypeCode.WIP);\n\n  currentDate: string = moment().format(\"YYYY-MM-DD\");\n  yesterdayDate: string = moment().add(-1, 'days').format(\"YYYY-MM-DD\");\n  minDate: string = Constants.c_MIN_DATE_2020;\n\n  dataReturned: any;\n  checkBoxList: Array<any> = [];\n  isPack: boolean = true;\n\n  constructor(\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    private service: BaseService,\n    private storage: Storage,\n    public loadingController: LoadingController,\n    public modalController: ModalController,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n\n    super(loadingCtrl, alertCtrl);\n\n    this.strChartTitle = this.router.url.replace(/[^a-zA-Z0-9 ]/g, \"\");\n\n    this.storage.get(Constants.c_ACCESS_TOKEN).then((accessToken) => {\n\n      this.accessToken = accessToken;\n\n      this.deptReqModel.accesstoken = accessToken;\n      this.downloadCSVReqModel.accesstoken = accessToken;\n\n      // this.monthlyReqModel.accesstoken = accessToken;\n      // this.monthlyReqModel.datefrom = this.standardDateTime(this.currentDate);\n      // this.monthlyReqModel.dateto = this.standardDateTime(this.currentDate);\n\n      // this.yearlyReqModel.accesstoken = accessToken;\n      // this.yearlyReqModel.datefrom = this.standardDateTime(this.currentDate);\n      // this.yearlyReqModel.dateto = this.standardDateTime(this.currentDate);\n\n      // this.wipPackReqModel.accesstoken = accessToken;\n      // this.wipPackReqModel.date = this.standardDateTime(this.currentDate);\n\n      // this.service.getWebService(Constants.k_GET_DEPT, this.deptReqModel, (res) => {\n\n      //   this.arrDept = JSON.parse(res.data);\n\n      //   this.arrDept.forEach(element => {\n      //     if (element === this.arrDept[0]) {\n      //       this.checkBoxList.push({'machine' : element, 'isChecked' : true})\n      //     } else {\n      //       this.checkBoxList.push({'machine' : element, 'isChecked' : false})\n      //     }\n      //   });\n\n      //   config.log(\"checkBoxList: \", this.checkBoxList);\n\n      //   // this.arrSelectedMachines = Array.prototype.map.call(this.arrMachines, function (item) { return item.value; })\n\n      //   this.wipPackReqModel.dept.push(this.arrDept[0].value);\n\n      //   this.monthlyReqModel.device = this.wipPackReqModel.dept.join(\",\");\n      //   this.yearlyReqModel.device = this.wipPackReqModel.dept.join(\",\");\n\n      //   this.callWSToReloadPagesData();        \n\n      // });\n\n      // if (this.data) {\n\n      //   this.wipPackReqModel.dept = [];\n\n      //   this.data.forEach(element => {\n      //     if (element.isChecked) {\n      //       this.wipPackReqModel.dept.push(element.dept.value)\n      //     }\n      //   });\n\n      //   this.callWSToReloadPagesData();\n\n      // }\n\n    });\n\n    if (this.route.snapshot.data['special']) {\n\n      this.wipPackReqModel = Object.assign({}, this.route.snapshot.data['special']);\n      this.wipNonPackReqModel = Object.assign( {}, this.route.snapshot.data['special']);\n\n      this.downloadCSVReqModel.dept = this.wipPackReqModel.dept;\n      this.downloadCSVReqModel.process = this.wipPackReqModel.process;\n\n      this.wipPackReqModel.packaging = WSPackageCode.Pack;\n      this.wipNonPackReqModel.packaging = WSPackageCode.NonPack;\n\n      this.callWSToReloadPagesData();\n\n    }\n\n  }\n\n  ngOnInit(): void {\n\n    // if (this.route.snapshot.data['special']) {\n\n    //   this.wipPackReqModel = this.route.snapshot.data['special'];\n\n    //   config.log(\"GET DATA FROM PROCESS: \", JSON.stringify([this.wipPackReqModel]));\n\n    //   this.callWSToReloadPagesData();\n\n    // }\n\n  }\n\n  ionViewDidEnter() {\n\n  }\n\n  callWSToReloadPagesData() {\n\n    this.arrDailyCharts = [];\n    this.arrDailyNonPackCharts = [];\n\n    let response1 = this.service.callWebService(Constants.k_HOURLY_WIP, this.wipPackReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrDailyCharts = JSON.parse(res.data);\n      }\n    }, false);\n    let response2 = this.service.callWebService(Constants.k_HOURLY_WIP, this.wipNonPackReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrDailyNonPackCharts = JSON.parse(res.data);\n      }\n    }, false);\n\n    this.service.callWebServiceSimultaneously([response1, response2]);\n\n  }\n\n  onWipHourlySelected(item: any) {\n\n  }\n\n  onFromMonthlyUsageSelected(item: any) {\n    let from = Date.parse(this.monthlyReqModel.datefrom)\n    let to = Date.parse(this.monthlyReqModel.dateto)\n    if (from > to) {\n      this.monthlyReqModel.dateto = this.monthlyReqModel.datefrom\n    }\n  }\n\n  onToMonthlyUsageSelected(item: any) {\n    let from = Date.parse(this.monthlyReqModel.datefrom)\n    let to = Date.parse(this.monthlyReqModel.dateto)\n    if (to < from) {\n      this.monthlyReqModel.datefrom = this.monthlyReqModel.dateto\n    }\n  }\n\n  onFromYearlyUsageSelected(item: any) {\n    let from = Date.parse(this.yearlyReqModel.datefrom)\n    let to = Date.parse(this.yearlyReqModel.dateto)\n    if (from > to) {\n      this.yearlyReqModel.dateto = this.yearlyReqModel.datefrom\n    }\n  }\n\n  onToYearlyUsageSelected(item: any) {\n    let from = Date.parse(this.yearlyReqModel.datefrom)\n    let to = Date.parse(this.yearlyReqModel.dateto)\n    if (to < from) {\n      this.yearlyReqModel.datefrom = this.yearlyReqModel.dateto\n    }\n  }\n\n  updatePackaging($event) {\n\n    this.isPack = !this.isPack;\n\n  }\n\n  selectMachine() {\n\n    // this.selectPop.open()\n\n    // this.service.getWebService(Constants.k_GET_DEVICE, this.deviceReqModel, (res) => {\n\n    //   this.arrMachines = JSON.parse(res.data);\n\n    //   // Use a timeout to gice some time to Angular\n    //   // to update the view. The amount of time is not\n    //   // important; it's just to run the code async\n    //   setTimeout(() => {\n\n    //     // Open the select\n    //     this.selectPop.open()\n\n    //   }, 100);\n\n    // });\n\n    this.presentModal()\n\n  }\n\n  optionsFn() {\n\n    this.monthlyReqModel.device = this.wipPackReqModel.dept.join(\",\");\n    this.yearlyReqModel.device = this.wipPackReqModel.dept.join(\",\");\n\n    this.callWSToReloadPagesData();\n\n  }\n\n  onTabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    config.log('tabChangeEvent => ', tabChangeEvent);\n    config.log('index => ', tabChangeEvent.index);\n    // this.optionsFn(null)\n  }\n\n  onViewWIPDateClicked() {\n\n    this.wipPackReqModel.date = this.standardDateTime(this.wipPackReqModel.date);\n    this.wipNonPackReqModel.date = this.wipPackReqModel.date\n\n    // this.service.presentLoading();\n    // this.service.callWebService(Constants.k_HOURLY_WIP, this.wipPackReqModel, (res) => {\n    //   if (res && res.data && res.data != '' && res.data != '-') {\n    //     this.arrDailyCharts = JSON.parse(res.data);\n    //   }\n    //   this.service.dismissLoading();\n    // }, false);\n\n    this.callWSToReloadPagesData();\n\n  }\n\n  random_rgb() {\n    var o = Math.round, r = Math.random, s = 255;\n    return 'rgb(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n  }\n\n  standardDateTime(dateString: string) {\n    return moment(dateString).format(\"YYYY-MM-DD\");\n  }\n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: SelectMachineComponent,\n      componentProps: {\n        \"checkBoxList\": this.checkBoxList,\n        \"paramTitle\": \"Select Department\"\n      }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n      if (dataReturned !== null && dataReturned.data !== undefined) {\n        // this.dataReturned = dataReturned.data;\n\n        this.wipPackReqModel.dept = [];\n\n        dataReturned.data.forEach(element => {\n          if (element.isChecked) {\n            this.wipPackReqModel.dept.push(element.machine.value)\n          }\n        });\n        config.log('--- Modal SELECTED Data: ', this.wipPackReqModel.dept);\n\n        this.optionsFn();\n\n      }\n    });\n\n    return await modal.present();\n  }\n\n  onClicked() {\n    config.log(\"BACK\");\n  }\n\n  downloadcsv() {\n    BasePagePage.presentAlert('Extract Data', 'Are you sure want to extract data as file to your local storage?', (res) => {\n      // config.log('hi, ai am here: ', res.data.values.email);\n\n      this.downloadCSVReqModel.date = this.wipPackReqModel.date;\n\n      this.service.presentLoading();\n\n      this.service.callWebService(Constants.k_DOWNLOAD_CSV, this.downloadCSVReqModel, (res) => {\n\n        if (res && res.data && res.data != '' && res.data != '-') {\n\n          let arr = JSON.parse(res.data);\n          let filepath = arr[0];\n          let fullpath = /*Constants.k_ROOT_DOMAIN_URL + \"/\" +*/ filepath.filepath\n          window.open(fullpath, '_system');\n\n        }\n\n        this.service.dismissLoading();\n\n      }, false);\n\n    }, [Constants.b_CANCEL, Constants.b_OK]/*, [{\n      name: 'email',\n      type: 'email',\n      placeholder: 'Recipient email here'\n    }]*/);\n\n  }\n\n}\n"],"sourceRoot":""}