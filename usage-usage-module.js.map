{"version":3,"sources":["webpack:///./src/app/usage/usage.module.ts","webpack:///./src/app/usage/usage.page.html","webpack:///./src/app/usage/usage.page.scss","webpack:///./src/app/usage/usage.page.ts"],"names":[],"mappings":"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","file":"usage-usage-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { UsagePage } from './usage.page';\nimport { from } from 'rxjs';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    A11yModule,\n    HttpClientModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: UsagePage\n      }\n    ])\n  ],\n  declarations: [UsagePage]\n})\nexport class UsagePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Usage\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"selectMachine()\\\">\\n        <ion-icon name=\\\"list-box\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons>\\n    <!-- <ion-buttons slot=\\\"end\\\">\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"exportEmail()\\\">\\n        <ion-icon name=\\\"share\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- <ion-select [interfaceOptions]=\\\"customActionSheetOptions\\\" multiple=\\\"true\\\" cancelText=\\\"Cancel\\\" okText=\\\"Select\\\" #popSelect\\n  [hidden]=\\\"true\\\" [(ngModel)]=\\\"arrSelectedMachines\\\" (ionChange)=\\\"optionsFn()\\\">\\n  <ion-select-option *ngFor=\\\"let machine of arrMachines\\\" value=\\\"{{machine.value}}\\\">{{machine.name}}\\n  </ion-select-option>\\n  <button (click)=\\\"selectAll(popSelect);\\\">select all</button>\\n</ion-select> -->\\n\\n<ion-content>\\n\\n  <mat-tab-group #tabGroup [selectedIndex]=\\\"selectedTab\\\" (selectedTabChange)=\\\"onTabChanged($event)\\\">\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">query_builder</mat-icon>\\n        Daily\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"DD MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"dailyReqModel.datefrom\\\" (ionChange)=\\\"onFromDailyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"DD MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"dailyReqModel.dateto\\\" (ionChange)=\\\"onToDailyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewDailyDateClicked()\\\">View data</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrDailyCharts;\\\" [data]=\\\"chart\\\" [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">calendar_today</mat-icon>\\n        Monthly\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"monthlyReqModel.datefrom\\\" (ionChange)=\\\"onFromMonthlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"monthlyReqModel.dateto\\\" (ionChange)=\\\"onToMonthlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewMonthlyDateClicked()\\\">View data</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrMonthlyCharts;\\\" [data]=\\\"chart\\\" [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">trending_up</mat-icon>\\n        Yearly\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"yearlyReqModel.datefrom\\\" (ionChange)=\\\"onFromYearlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"yearlyReqModel.dateto\\\" (ionChange)=\\\"onToYearlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewYearlyDateClicked()\\\">View data</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrYearlyCharts;\\\" [data]=\\\"chart\\\" [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n  </mat-tab-group>\\n\\n</ion-content>\"","module.exports = \".welcome-card img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\np.text-center {\\n  text-align: center; }\\n\\n.example-tab-icon {\\n  margin-right: 8px; }\\n\\n.center-ver {\\n  display: flex !important;\\n  align-content: center !important;\\n  align-items: center !important;\\n  float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94aWFuZ3dlaS9Eb2N1bWVudHMvSU9OSUNfUFJPSkVDVF9NQUlOL3NyYy9hcHAvdXNhZ2UvdXNhZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLHdCQUF1QjtFQUN2QixnQ0FBK0I7RUFDL0IsOEJBQTZCO0VBQzdCLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3VzYWdlL3VzYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNhcmQgaW1nIHtcbiAgbWF4LWhlaWdodDogMzV2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxucC50ZXh0LWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmV4YW1wbGUtdGFiLWljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbn1cblxuLmNlbnRlci12ZXIge1xuICBkaXNwbGF5OiBmbGV4IWltcG9ydGFudDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyIWltcG9ydGFudDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlciFpbXBvcnRhbnQ7XG4gIGZsb2F0OiByaWdodDtcbn0iXX0= */\"","import { Component, ViewChild, ViewChildren, AfterViewInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { stacked100 } from 'chartjs-plugin-stacked100';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { BaseService } from '../services/base.service';\nimport { Constants, config, StatusCode } from '../data-model/constant.model';\nimport { DeviceModel, UsageOrImpressionModel, AccessTokenModel } from '../data-model/base.model';\nimport { Storage } from '@ionic/storage';\nimport * as moment from \"moment\";\nimport { IonSelect, Platform, AlertController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Observable, of, throwError } from 'rxjs';\nimport { forkJoin } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { SelectMachineComponent } from '../shared/select-machine/select-machine.component';\nimport { BasePagePage } from '../shared/base-page/base-page.page';\n\nrequire('chartjs-plugin-stacked100');\n\n@Component({\n  selector: 'app-usage',\n  templateUrl: 'usage.page.html',\n  styleUrls: ['usage.page.scss'],\n})\n\nexport class UsagePage extends BasePagePage {\n\n  @ViewChild('tabGroup') tabGroup;\n  @ViewChild('popSelect') selectPop: IonSelect;\n\n  strChartTitle: string = '';\n  hrzBars5: any;\n  arrDailyCharts: any[] = [];\n  arrMonthlyCharts: any[] = [];\n  arrYearlyCharts: any[] = [];\n  customActionSheetOptions: any = {\n    header: 'Machines',\n    subHeader: 'Select the machine(s) you want to view'\n  };\n  arrMachines: Array<any> = [];\n  arrSelectedMachines: Array<any> = [];\n  selectedTab: any = 0;\n  accessToken: string = '';\n  deviceReqModel: DeviceModel = new AccessTokenModel();\n  dailyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n  monthlyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n  yearlyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n\n  currentDate: string = moment().format(\"YYYY-MM-DD\");\n  yesterdayDate: string = moment().add(-1, 'days').format(\"YYYY-MM-DD\");\n  minDate: string = Constants.c_MIN_DATE_2019;\n\n  dataReturned: any;\n  checkBoxList: Array<any> = [];\n\n  constructor(\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    private service: BaseService,\n    private storage: Storage,\n    public modalController: ModalController,\n    private router: Router) {\n\n    super(loadingCtrl, alertCtrl);\n\n    this.strChartTitle = this.router.url.replace(/[^a-zA-Z0-9 ]/g, \"\");\n\n    this.storage.get(Constants.c_ACCESS_TOKEN).then((accessToken) => {\n\n      this.accessToken = accessToken;\n\n      this.deviceReqModel.accesstoken = accessToken;\n\n      this.dailyReqModel.accesstoken = accessToken;\n      this.dailyReqModel.datefrom = this.standardDateTime(this.yesterdayDate);\n      this.dailyReqModel.dateto = this.standardDateTime(this.yesterdayDate);\n\n      this.monthlyReqModel.accesstoken = accessToken;\n      this.monthlyReqModel.datefrom = this.standardDateTime(this.currentDate);\n      this.monthlyReqModel.dateto = this.standardDateTime(this.currentDate);\n\n      this.yearlyReqModel.accesstoken = accessToken;\n      this.yearlyReqModel.datefrom = this.standardDateTime(this.currentDate);\n      this.yearlyReqModel.dateto = this.standardDateTime(this.currentDate);\n\n      this.presentLoading();\n\n      this.service.callWebService(Constants.k_GET_DEVICE, this.deviceReqModel, (res) => {\n\n        if (res.status_code == StatusCode.Success) {\n\n          this.arrMachines = JSON.parse(res.data);\n\n          this.arrMachines.forEach(element => {\n            if (element === this.arrMachines[0]) {\n              this.checkBoxList.push({ 'machine': element, 'isChecked': true })\n            } else {\n              this.checkBoxList.push({ 'machine': element, 'isChecked': false })\n            }\n          });\n\n          this.arrSelectedMachines.push(this.arrMachines[0].value);\n\n          this.dailyReqModel.device = this.arrSelectedMachines.join(\",\");\n          this.monthlyReqModel.device = this.arrSelectedMachines.join(\",\");\n          this.yearlyReqModel.device = this.arrSelectedMachines.join(\",\");\n\n          this.callWSToReloadPagesData().subscribe(() => {\n\n            this.dismissLoading();\n\n          });\n\n        } else {\n\n          this.dismissLoading();\n\n        }\n\n      });\n\n    });\n\n  }\n\n  callWSToReloadPagesData(): Observable<any> {\n\n    let response1 = this.service.callWebService(Constants.k_DAILY_USAGE, this.dailyReqModel, (res) => {\n      this.arrDailyCharts = JSON.parse(res.data);\n    });\n    let response2 = this.service.callWebService(Constants.k_MONTHLY_USAGE, this.monthlyReqModel, (res) => {\n      this.arrMonthlyCharts = JSON.parse(res.data);\n    });\n    let response3 = this.service.callWebService(Constants.k_YEARLY_USAGE, this.yearlyReqModel, (res) => {\n      this.arrYearlyCharts = JSON.parse(res.data);\n    });\n\n    return forkJoin([response1, response2, response3]);\n\n  }\n\n  onFromDailyUsageSelected(item: any) {\n    let from = Date.parse(this.dailyReqModel.datefrom)\n    let to = Date.parse(this.dailyReqModel.dateto)\n    if (from > to) {\n      this.dailyReqModel.dateto = this.dailyReqModel.datefrom\n    }\n  }\n\n  onToDailyUsageSelected(item: any) {\n    let from = Date.parse(this.dailyReqModel.datefrom)\n    let to = Date.parse(this.dailyReqModel.dateto)\n    if (to < from) {\n      this.dailyReqModel.datefrom = this.dailyReqModel.dateto\n    }\n  }\n\n  onFromMonthlyUsageSelected(item: any) {\n    let from = Date.parse(this.monthlyReqModel.datefrom)\n    let to = Date.parse(this.monthlyReqModel.dateto)\n    if (from > to) {\n      this.monthlyReqModel.dateto = this.monthlyReqModel.datefrom\n    }\n  }\n\n  onToMonthlyUsageSelected(item: any) {\n    let from = Date.parse(this.monthlyReqModel.datefrom)\n    let to = Date.parse(this.monthlyReqModel.dateto)\n    if (to < from) {\n      this.monthlyReqModel.datefrom = this.monthlyReqModel.dateto\n    }\n  }\n\n  onFromYearlyUsageSelected(item: any) {\n    let from = Date.parse(this.yearlyReqModel.datefrom)\n    let to = Date.parse(this.yearlyReqModel.dateto)\n    if (from > to) {\n      this.yearlyReqModel.dateto = this.yearlyReqModel.datefrom\n    }\n  }\n\n  onToYearlyUsageSelected(item: any) {\n    let from = Date.parse(this.yearlyReqModel.datefrom)\n    let to = Date.parse(this.yearlyReqModel.dateto)\n    if (to < from) {\n      this.yearlyReqModel.datefrom = this.yearlyReqModel.dateto\n    }\n  }\n\n  selectMachine() {\n\n    // this.isSelectMachine = !this.isSelectMachine;\n\n    // this.selectPop.open()\n\n    // this.service.getWebService(Constants.k_GET_DEVICE, this.deviceReqModel, (res) => {\n\n    //   this.arrMachines = JSON.parse(res.data);\n\n    //   // Use a timeout to gice some time to Angular\n    //   // to update the view. The amount of time is not\n    //   // important; it's just to run the code async\n    //   setTimeout(() => {\n\n    //     // Open the select\n    //     this.selectPop.open()\n\n    //   }, 100);\n\n    // });\n\n    this.presentModal()\n\n  }\n  selectAll(select: IonSelect) {\n    // do what you want\n    config.log('selectselectselect: ', select);\n  }\n\n  optionsFn() {\n\n    config.log(\"item: \", this.arrSelectedMachines)\n\n    this.dailyReqModel.device = this.arrSelectedMachines.join(\",\");\n    this.monthlyReqModel.device = this.arrSelectedMachines.join(\",\");\n    this.yearlyReqModel.device = this.arrSelectedMachines.join(\",\");\n\n    this.presentLoading();\n    this.callWSToReloadPagesData().subscribe(() => {\n      this.dismissLoading();\n    });\n\n  }\n\n  onTabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    config.log('tabChangeEvent => ', tabChangeEvent);\n    config.log('index => ', tabChangeEvent.index);\n    // this.optionsFn(null)\n  }\n\n  onViewDailyDateClicked() {\n\n    this.dailyReqModel.datefrom = this.standardDateTime(this.dailyReqModel.datefrom);\n    this.dailyReqModel.dateto = this.standardDateTime(this.dailyReqModel.dateto);\n\n    this.presentLoading();\n    this.service.callWebService(Constants.k_DAILY_USAGE, this.dailyReqModel, (res) => {\n      this.arrDailyCharts = JSON.parse(res.data);\n      this.dismissLoading();\n    });\n\n  }\n\n  onViewMonthlyDateClicked() {\n\n    this.monthlyReqModel.datefrom = this.standardDateTime(this.monthlyReqModel.datefrom);\n    this.monthlyReqModel.dateto = this.standardDateTime(this.monthlyReqModel.dateto);\n\n    this.presentLoading();\n    this.service.callWebService(Constants.k_MONTHLY_USAGE, this.monthlyReqModel, (res) => {\n      this.arrMonthlyCharts = JSON.parse(res.data);\n      this.dismissLoading();\n    });\n\n  }\n\n  onViewYearlyDateClicked() {\n\n    this.yearlyReqModel.datefrom = this.standardDateTime(this.yearlyReqModel.datefrom);\n    this.yearlyReqModel.dateto = this.standardDateTime(this.yearlyReqModel.dateto);\n\n    this.presentLoading();\n    this.service.callWebService(Constants.k_YEARLY_USAGE, this.yearlyReqModel, (res) => {\n      this.arrYearlyCharts = JSON.parse(res.data);\n      this.dismissLoading();\n    });\n\n  }\n\n  random_rgb() {\n    var o = Math.round, r = Math.random, s = 255;\n    return 'rgb(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n  }\n\n  standardDateTime(dateString: string) {\n    return moment(dateString).format(\"YYYY-MM-DD\");\n  }\n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: SelectMachineComponent,\n      componentProps: {\n        \"checkBoxList\": this.checkBoxList,\n        \"paramTitle\": \"Select Machine\"\n      }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n      if (dataReturned !== null && dataReturned.data !== undefined) {\n        // this.dataReturned = dataReturned.data;\n\n        this.arrSelectedMachines = [];\n\n        dataReturned.data.forEach(element => {\n          if (element.isChecked) {\n            this.arrSelectedMachines.push(element.machine.value)\n          }\n        });\n        config.log('--- Modal SELECTED Data: ', this.arrSelectedMachines);\n\n        this.optionsFn();\n\n      }\n    });\n\n    return await modal.present();\n  }\n\n}"],"sourceRoot":""}