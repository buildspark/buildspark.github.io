{"version":3,"sources":["webpack:///./node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.js","webpack:///./src/app/shared/canvas/canvas.component.html","webpack:///./src/app/shared/canvas/canvas.component.scss","webpack:///./src/app/shared/canvas/canvas.component.ts","webpack:///./src/app/shared/select-machine/select-machine.component.html","webpack:///./src/app/shared/select-machine/select-machine.component.scss","webpack:///./src/app/shared/select-machine/select-machine.component.ts","webpack:///./src/app/shared/shared.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAA4D,4BAA4B,mBAAO,CAAC,uDAAU,GAAG,mBAAO,CAAC,mDAAU;AAC/H,SACkF;AAClF,CAAC,kCAAkC;;AAEnC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF,eAAe,aAAa;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,sBAAsB;AAClC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,4EAA4E,aAAa;;AAEzF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,qBAAqB;;AAE9F;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,IAAI;;AAEJ;AACA;;AAEA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,gCAAgC,qBAAqB;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,cAAc;AACd,KAAK;AACL,cAAc;AACd;;AAEA;;AAEA;AACA;AACA,iCAAiC,qBAAqB;AACtD;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,IAAI;AACJ;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA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","file":"default~impression-impression-module~operator-operator-module~output-output-module~usage-usage-modul~2aacbff0.js","sourcesContent":["/*!\n * @license\n * chartjs-plugin-zoom\n * http://chartjs.org/\n * Version: 0.7.7\n *\n * Copyright 2020 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-plugin-zoom/blob/master/LICENSE.md\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('chart.js'), require('hammerjs')) :\ntypeof define === 'function' && define.amd ? define(['chart.js', 'hammerjs'], factory) :\n(global = global || self, global.ChartZoom = factory(global.Chart, global.Hammer));\n}(this, (function (Chart, Hammer) { 'use strict';\n\nChart = Chart && Object.prototype.hasOwnProperty.call(Chart, 'default') ? Chart['default'] : Chart;\nHammer = Hammer && Object.prototype.hasOwnProperty.call(Hammer, 'default') ? Hammer['default'] : Hammer;\n\nvar helpers = Chart.helpers;\n\n// Take the zoom namespace of Chart\nvar zoomNS = Chart.Zoom = Chart.Zoom || {};\n\n// Where we store functions to handle different scale types\nvar zoomFunctions = zoomNS.zoomFunctions = zoomNS.zoomFunctions || {};\nvar panFunctions = zoomNS.panFunctions = zoomNS.panFunctions || {};\n\nChart.Zoom.defaults = Chart.defaults.global.plugins.zoom = {\n\tpan: {\n\t\tenabled: false,\n\t\tmode: 'xy',\n\t\tspeed: 20,\n\t\tthreshold: 10\n\t},\n\tzoom: {\n\t\tenabled: false,\n\t\tmode: 'xy',\n\t\tsensitivity: 3,\n\t\tspeed: 0.1\n\t}\n};\n\nfunction resolveOptions(chart, options) {\n\tvar deprecatedOptions = {};\n\tif (typeof chart.options.pan !== 'undefined') {\n\t\tdeprecatedOptions.pan = chart.options.pan;\n\t}\n\tif (typeof chart.options.zoom !== 'undefined') {\n\t\tdeprecatedOptions.zoom = chart.options.zoom;\n\t}\n\tvar props = chart.$zoom;\n\toptions = props._options = helpers.merge({}, [options, deprecatedOptions]);\n\n\t// Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n\t// We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n\t// and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n\tvar node = props._node;\n\tvar zoomEnabled = options.zoom && options.zoom.enabled;\n\tvar dragEnabled = options.zoom.drag;\n\tif (zoomEnabled && !dragEnabled) {\n\t\tnode.addEventListener('wheel', props._wheelHandler);\n\t} else {\n\t\tnode.removeEventListener('wheel', props._wheelHandler);\n\t}\n\tif (zoomEnabled && dragEnabled) {\n\t\tnode.addEventListener('mousedown', props._mouseDownHandler);\n\t\tnode.ownerDocument.addEventListener('mouseup', props._mouseUpHandler);\n\t} else {\n\t\tnode.removeEventListener('mousedown', props._mouseDownHandler);\n\t\tnode.removeEventListener('mousemove', props._mouseMoveHandler);\n\t\tnode.ownerDocument.removeEventListener('mouseup', props._mouseUpHandler);\n\t}\n}\n\nfunction storeOriginalOptions(chart) {\n\tvar originalOptions = chart.$zoom._originalOptions;\n\thelpers.each(chart.scales, function(scale) {\n\t\tif (!originalOptions[scale.id]) {\n\t\t\toriginalOptions[scale.id] = helpers.clone(scale.options);\n\t\t}\n\t});\n\thelpers.each(originalOptions, function(opt, key) {\n\t\tif (!chart.scales[key]) {\n\t\t\tdelete originalOptions[key];\n\t\t}\n\t});\n}\n\n/**\n * @param {string} mode can be 'x', 'y' or 'xy'\n * @param {string} dir can be 'x' or 'y'\n * @param {Chart} chart instance of the chart in question\n */\nfunction directionEnabled(mode, dir, chart) {\n\tif (mode === undefined) {\n\t\treturn true;\n\t} else if (typeof mode === 'string') {\n\t\treturn mode.indexOf(dir) !== -1;\n\t} else if (typeof mode === 'function') {\n\t\treturn mode({chart: chart}).indexOf(dir) !== -1;\n\t}\n\n\treturn false;\n}\n\nfunction rangeMaxLimiter(zoomPanOptions, newMax) {\n\tif (zoomPanOptions.scaleAxes && zoomPanOptions.rangeMax &&\n\t\t\t!helpers.isNullOrUndef(zoomPanOptions.rangeMax[zoomPanOptions.scaleAxes])) {\n\t\tvar rangeMax = zoomPanOptions.rangeMax[zoomPanOptions.scaleAxes];\n\t\tif (newMax > rangeMax) {\n\t\t\tnewMax = rangeMax;\n\t\t}\n\t}\n\treturn newMax;\n}\n\nfunction rangeMinLimiter(zoomPanOptions, newMin) {\n\tif (zoomPanOptions.scaleAxes && zoomPanOptions.rangeMin &&\n\t\t\t!helpers.isNullOrUndef(zoomPanOptions.rangeMin[zoomPanOptions.scaleAxes])) {\n\t\tvar rangeMin = zoomPanOptions.rangeMin[zoomPanOptions.scaleAxes];\n\t\tif (newMin < rangeMin) {\n\t\t\tnewMin = rangeMin;\n\t\t}\n\t}\n\treturn newMin;\n}\n\nfunction zoomCategoryScale(scale, zoom, center, zoomOptions) {\n\tvar labels = scale.chart.data.labels;\n\tvar minIndex = scale.minIndex;\n\tvar lastLabelIndex = labels.length - 1;\n\tvar maxIndex = scale.maxIndex;\n\tvar sensitivity = zoomOptions.sensitivity;\n\tvar chartCenter = scale.isHorizontal() ? scale.left + (scale.width / 2) : scale.top + (scale.height / 2);\n\tvar centerPointer = scale.isHorizontal() ? center.x : center.y;\n\n\tzoomNS.zoomCumulativeDelta = zoom > 1 ? zoomNS.zoomCumulativeDelta + 1 : zoomNS.zoomCumulativeDelta - 1;\n\n\tif (Math.abs(zoomNS.zoomCumulativeDelta) > sensitivity) {\n\t\tif (zoomNS.zoomCumulativeDelta < 0) {\n\t\t\tif (centerPointer >= chartCenter) {\n\t\t\t\tif (minIndex <= 0) {\n\t\t\t\t\tmaxIndex = Math.min(lastLabelIndex, maxIndex + 1);\n\t\t\t\t} else {\n\t\t\t\t\tminIndex = Math.max(0, minIndex - 1);\n\t\t\t\t}\n\t\t\t} else if (centerPointer < chartCenter) {\n\t\t\t\tif (maxIndex >= lastLabelIndex) {\n\t\t\t\t\tminIndex = Math.max(0, minIndex - 1);\n\t\t\t\t} else {\n\t\t\t\t\tmaxIndex = Math.min(lastLabelIndex, maxIndex + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tzoomNS.zoomCumulativeDelta = 0;\n\t\t} else if (zoomNS.zoomCumulativeDelta > 0) {\n\t\t\tif (centerPointer >= chartCenter) {\n\t\t\t\tminIndex = minIndex < maxIndex ? minIndex = Math.min(maxIndex, minIndex + 1) : minIndex;\n\t\t\t} else if (centerPointer < chartCenter) {\n\t\t\t\tmaxIndex = maxIndex > minIndex ? maxIndex = Math.max(minIndex, maxIndex - 1) : maxIndex;\n\t\t\t}\n\t\t\tzoomNS.zoomCumulativeDelta = 0;\n\t\t}\n\t\tscale.options.ticks.min = rangeMinLimiter(zoomOptions, labels[minIndex]);\n\t\tscale.options.ticks.max = rangeMaxLimiter(zoomOptions, labels[maxIndex]);\n\t}\n}\n\nfunction zoomNumericalScale(scale, zoom, center, zoomOptions) {\n\tvar range = scale.max - scale.min;\n\tvar newDiff = range * (zoom - 1);\n\n\tvar centerPoint = scale.isHorizontal() ? center.x : center.y;\n\tvar minPercent = (scale.getValueForPixel(centerPoint) - scale.min) / range;\n\tvar maxPercent = 1 - minPercent;\n\n\tvar minDelta = newDiff * minPercent;\n\tvar maxDelta = newDiff * maxPercent;\n\n\tscale.options.ticks.min = rangeMinLimiter(zoomOptions, scale.min + minDelta);\n\tscale.options.ticks.max = rangeMaxLimiter(zoomOptions, scale.max - maxDelta);\n}\n\nfunction zoomTimeScale(scale, zoom, center, zoomOptions) {\n\tzoomNumericalScale(scale, zoom, center, zoomOptions);\n\n\tvar options = scale.options;\n\tif (options.time) {\n\t\tif (options.time.min) {\n\t\t\toptions.time.min = options.ticks.min;\n\t\t}\n\t\tif (options.time.max) {\n\t\t\toptions.time.max = options.ticks.max;\n\t\t}\n\t}\n}\n\nfunction zoomScale(scale, zoom, center, zoomOptions) {\n\tvar fn = zoomFunctions[scale.type];\n\tif (fn) {\n\t\tfn(scale, zoom, center, zoomOptions);\n\t}\n}\n\n/**\n * @param chart The chart instance\n * @param {number} percentZoomX The zoom percentage in the x direction\n * @param {number} percentZoomY The zoom percentage in the y direction\n * @param {{x: number, y: number}} focalPoint The x and y coordinates of zoom focal point. The point which doesn't change while zooming. E.g. the location of the mouse cursor when \"drag: false\"\n * @param {string} whichAxes `xy`, 'x', or 'y'\n * @param {number} animationDuration Duration of the animation of the redraw in milliseconds\n */\nfunction doZoom(chart, percentZoomX, percentZoomY, focalPoint, whichAxes, animationDuration) {\n\tvar ca = chart.chartArea;\n\tif (!focalPoint) {\n\t\tfocalPoint = {\n\t\t\tx: (ca.left + ca.right) / 2,\n\t\t\ty: (ca.top + ca.bottom) / 2,\n\t\t};\n\t}\n\n\tvar zoomOptions = chart.$zoom._options.zoom;\n\n\tif (zoomOptions.enabled) {\n\t\tstoreOriginalOptions(chart);\n\t\t// Do the zoom here\n\t\tvar zoomMode = typeof zoomOptions.mode === 'function' ? zoomOptions.mode({chart: chart}) : zoomOptions.mode;\n\n\t\t// Which axe should be modified when figers were used.\n\t\tvar _whichAxes;\n\t\tif (zoomMode === 'xy' && whichAxes !== undefined) {\n\t\t\t// based on fingers positions\n\t\t\t_whichAxes = whichAxes;\n\t\t} else {\n\t\t\t// no effect\n\t\t\t_whichAxes = 'xy';\n\t\t}\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tif (scale.isHorizontal() && directionEnabled(zoomMode, 'x', chart) && directionEnabled(_whichAxes, 'x', chart)) {\n\t\t\t\tzoomOptions.scaleAxes = 'x';\n\t\t\t\tzoomScale(scale, percentZoomX, focalPoint, zoomOptions);\n\t\t\t} else if (!scale.isHorizontal() && directionEnabled(zoomMode, 'y', chart) && directionEnabled(_whichAxes, 'y', chart)) {\n\t\t\t\t// Do Y zoom\n\t\t\t\tzoomOptions.scaleAxes = 'y';\n\t\t\t\tzoomScale(scale, percentZoomY, focalPoint, zoomOptions);\n\t\t\t}\n\t\t});\n\n\t\tif (animationDuration) {\n\t\t\tchart.update({\n\t\t\t\tduration: animationDuration,\n\t\t\t\teasing: 'easeOutQuad',\n\t\t\t});\n\t\t} else {\n\t\t\tchart.update(0);\n\t\t}\n\n\t\tif (typeof zoomOptions.onZoom === 'function') {\n\t\t\tzoomOptions.onZoom({chart: chart});\n\t\t}\n\t}\n}\n\nfunction panCategoryScale(scale, delta, panOptions) {\n\tvar labels = scale.chart.data.labels;\n\tvar lastLabelIndex = labels.length - 1;\n\tvar offsetAmt = Math.max(scale.ticks.length, 1);\n\tvar panSpeed = panOptions.speed;\n\tvar minIndex = scale.minIndex;\n\tvar step = Math.round(scale.width / (offsetAmt * panSpeed));\n\tvar maxIndex;\n\n\tzoomNS.panCumulativeDelta += delta;\n\n\tminIndex = zoomNS.panCumulativeDelta > step ? Math.max(0, minIndex - 1) : zoomNS.panCumulativeDelta < -step ? Math.min(lastLabelIndex - offsetAmt + 1, minIndex + 1) : minIndex;\n\tzoomNS.panCumulativeDelta = minIndex !== scale.minIndex ? 0 : zoomNS.panCumulativeDelta;\n\n\tmaxIndex = Math.min(lastLabelIndex, minIndex + offsetAmt - 1);\n\n\tscale.options.ticks.min = rangeMinLimiter(panOptions, labels[minIndex]);\n\tscale.options.ticks.max = rangeMaxLimiter(panOptions, labels[maxIndex]);\n}\n\nfunction panNumericalScale(scale, delta, panOptions) {\n\tvar tickOpts = scale.options.ticks;\n\tvar prevStart = scale.min;\n\tvar prevEnd = scale.max;\n\tvar newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart) - delta);\n\tvar newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd) - delta);\n\t// The time scale returns date objects so convert to numbers. Can remove at Chart.js v3\n\tnewMin = newMin.valueOf ? newMin.valueOf() : newMin;\n\tnewMax = newMax.valueOf ? newMax.valueOf() : newMax;\n\tvar rangeMin = newMin;\n\tvar rangeMax = newMax;\n\tvar diff;\n\n\tif (panOptions.scaleAxes && panOptions.rangeMin &&\n\t\t\t!helpers.isNullOrUndef(panOptions.rangeMin[panOptions.scaleAxes])) {\n\t\trangeMin = panOptions.rangeMin[panOptions.scaleAxes];\n\t}\n\tif (panOptions.scaleAxes && panOptions.rangeMax &&\n\t\t\t!helpers.isNullOrUndef(panOptions.rangeMax[panOptions.scaleAxes])) {\n\t\trangeMax = panOptions.rangeMax[panOptions.scaleAxes];\n\t}\n\n\tif (newMin >= rangeMin && newMax <= rangeMax) {\n\t\ttickOpts.min = newMin;\n\t\ttickOpts.max = newMax;\n\t} else if (newMin < rangeMin) {\n\t\tdiff = prevStart - rangeMin;\n\t\ttickOpts.min = rangeMin;\n\t\ttickOpts.max = prevEnd - diff;\n\t} else if (newMax > rangeMax) {\n\t\tdiff = rangeMax - prevEnd;\n\t\ttickOpts.max = rangeMax;\n\t\ttickOpts.min = prevStart + diff;\n\t}\n}\n\nfunction panTimeScale(scale, delta, panOptions) {\n\tpanNumericalScale(scale, delta, panOptions);\n\n\tvar options = scale.options;\n\tif (options.time) {\n\t\tif (options.time.min) {\n\t\t\toptions.time.min = options.ticks.min;\n\t\t}\n\t\tif (options.time.max) {\n\t\t\toptions.time.max = options.ticks.max;\n\t\t}\n\t}\n}\n\nfunction panScale(scale, delta, panOptions) {\n\tvar fn = panFunctions[scale.type];\n\tif (fn) {\n\t\tfn(scale, delta, panOptions);\n\t}\n}\n\nfunction doPan(chartInstance, deltaX, deltaY) {\n\tstoreOriginalOptions(chartInstance);\n\tvar panOptions = chartInstance.$zoom._options.pan;\n\tif (panOptions.enabled) {\n\t\tvar panMode = typeof panOptions.mode === 'function' ? panOptions.mode({chart: chartInstance}) : panOptions.mode;\n\n\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\tif (scale.isHorizontal() && directionEnabled(panMode, 'x', chartInstance) && deltaX !== 0) {\n\t\t\t\tpanOptions.scaleAxes = 'x';\n\t\t\t\tpanScale(scale, deltaX, panOptions);\n\t\t\t} else if (!scale.isHorizontal() && directionEnabled(panMode, 'y', chartInstance) && deltaY !== 0) {\n\t\t\t\tpanOptions.scaleAxes = 'y';\n\t\t\t\tpanScale(scale, deltaY, panOptions);\n\t\t\t}\n\t\t});\n\n\t\tchartInstance.update(0);\n\n\t\tif (typeof panOptions.onPan === 'function') {\n\t\t\tpanOptions.onPan({chart: chartInstance});\n\t\t}\n\t}\n}\n\nfunction getXAxis(chartInstance) {\n\tvar scales = chartInstance.scales;\n\tvar scaleIds = Object.keys(scales);\n\tfor (var i = 0; i < scaleIds.length; i++) {\n\t\tvar scale = scales[scaleIds[i]];\n\n\t\tif (scale.isHorizontal()) {\n\t\t\treturn scale;\n\t\t}\n\t}\n}\n\nfunction getYAxis(chartInstance) {\n\tvar scales = chartInstance.scales;\n\tvar scaleIds = Object.keys(scales);\n\tfor (var i = 0; i < scaleIds.length; i++) {\n\t\tvar scale = scales[scaleIds[i]];\n\n\t\tif (!scale.isHorizontal()) {\n\t\t\treturn scale;\n\t\t}\n\t}\n}\n\n// Store these for later\nzoomNS.zoomFunctions.category = zoomCategoryScale;\nzoomNS.zoomFunctions.time = zoomTimeScale;\nzoomNS.zoomFunctions.linear = zoomNumericalScale;\nzoomNS.zoomFunctions.logarithmic = zoomNumericalScale;\nzoomNS.panFunctions.category = panCategoryScale;\nzoomNS.panFunctions.time = panTimeScale;\nzoomNS.panFunctions.linear = panNumericalScale;\nzoomNS.panFunctions.logarithmic = panNumericalScale;\n// Globals for category pan and zoom\nzoomNS.panCumulativeDelta = 0;\nzoomNS.zoomCumulativeDelta = 0;\n\n// Chartjs Zoom Plugin\nvar zoomPlugin = {\n\tid: 'zoom',\n\n\tafterInit: function(chartInstance) {\n\n\t\tchartInstance.resetZoom = function() {\n\t\t\tstoreOriginalOptions(chartInstance);\n\t\t\tvar originalOptions = chartInstance.$zoom._originalOptions;\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\n\t\t\t\tvar timeOptions = scale.options.time;\n\t\t\t\tvar tickOptions = scale.options.ticks;\n\n\t\t\t\tif (originalOptions[scale.id]) {\n\n\t\t\t\t\tif (timeOptions) {\n\t\t\t\t\t\ttimeOptions.min = originalOptions[scale.id].time.min;\n\t\t\t\t\t\ttimeOptions.max = originalOptions[scale.id].time.max;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOptions) {\n\t\t\t\t\t\ttickOptions.min = originalOptions[scale.id].ticks.min;\n\t\t\t\t\t\ttickOptions.max = originalOptions[scale.id].ticks.max;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tif (timeOptions) {\n\t\t\t\t\t\tdelete timeOptions.min;\n\t\t\t\t\t\tdelete timeOptions.max;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOptions) {\n\t\t\t\t\t\tdelete tickOptions.min;\n\t\t\t\t\t\tdelete tickOptions.max;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t});\n\n\t\t\tchartInstance.update();\n\t\t};\n\n\t},\n\n\tbeforeUpdate: function(chart, options) {\n\t\tresolveOptions(chart, options);\n\t},\n\n\tbeforeInit: function(chartInstance, pluginOptions) {\n\t\tchartInstance.$zoom = {\n\t\t\t_originalOptions: {}\n\t\t};\n\t\tvar node = chartInstance.$zoom._node = chartInstance.ctx.canvas;\n\t\tresolveOptions(chartInstance, pluginOptions);\n\n\t\tvar options = chartInstance.$zoom._options;\n\t\tvar panThreshold = options.pan && options.pan.threshold;\n\n\t\tchartInstance.$zoom._mouseDownHandler = function(event) {\n\t\t\tnode.addEventListener('mousemove', chartInstance.$zoom._mouseMoveHandler);\n\t\t\tchartInstance.$zoom._dragZoomStart = event;\n\t\t};\n\n\t\tchartInstance.$zoom._mouseMoveHandler = function(event) {\n\t\t\tif (chartInstance.$zoom._dragZoomStart) {\n\t\t\t\tchartInstance.$zoom._dragZoomEnd = event;\n\t\t\t\tchartInstance.update(0);\n\t\t\t}\n\t\t};\n\n\t\tchartInstance.$zoom._mouseUpHandler = function(event) {\n\t\t\tif (!chartInstance.$zoom._dragZoomStart) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnode.removeEventListener('mousemove', chartInstance.$zoom._mouseMoveHandler);\n\n\t\t\tvar beginPoint = chartInstance.$zoom._dragZoomStart;\n\n\t\t\tvar offsetX = beginPoint.target.getBoundingClientRect().left;\n\t\t\tvar startX = Math.min(beginPoint.clientX, event.clientX) - offsetX;\n\t\t\tvar endX = Math.max(beginPoint.clientX, event.clientX) - offsetX;\n\n\t\t\tvar offsetY = beginPoint.target.getBoundingClientRect().top;\n\t\t\tvar startY = Math.min(beginPoint.clientY, event.clientY) - offsetY;\n\t\t\tvar endY = Math.max(beginPoint.clientY, event.clientY) - offsetY;\n\n\t\t\tvar dragDistanceX = endX - startX;\n\t\t\tvar dragDistanceY = endY - startY;\n\n\t\t\t// Remove drag start and end before chart update to stop drawing selected area\n\t\t\tchartInstance.$zoom._dragZoomStart = null;\n\t\t\tchartInstance.$zoom._dragZoomEnd = null;\n\n\t\t\tvar zoomThreshold = options.zoom && options.zoom.threshold || 0;\n\t\t\tif (dragDistanceX <= zoomThreshold && dragDistanceY <= zoomThreshold) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar chartArea = chartInstance.chartArea;\n\n\t\t\tvar zoomOptions = chartInstance.$zoom._options.zoom;\n\t\t\tvar chartDistanceX = chartArea.right - chartArea.left;\n\t\t\tvar xEnabled = directionEnabled(zoomOptions.mode, 'x', chartInstance);\n\t\t\tvar zoomX = xEnabled && dragDistanceX ? 1 + ((chartDistanceX - dragDistanceX) / chartDistanceX) : 1;\n\n\t\t\tvar chartDistanceY = chartArea.bottom - chartArea.top;\n\t\t\tvar yEnabled = directionEnabled(zoomOptions.mode, 'y', chartInstance);\n\t\t\tvar zoomY = yEnabled && dragDistanceY ? 1 + ((chartDistanceY - dragDistanceY) / chartDistanceY) : 1;\n\n\t\t\tdoZoom(chartInstance, zoomX, zoomY, {\n\t\t\t\tx: (startX - chartArea.left) / (1 - dragDistanceX / chartDistanceX) + chartArea.left,\n\t\t\t\ty: (startY - chartArea.top) / (1 - dragDistanceY / chartDistanceY) + chartArea.top\n\t\t\t}, undefined, zoomOptions.drag.animationDuration);\n\n\t\t\tif (typeof zoomOptions.onZoomComplete === 'function') {\n\t\t\t\tzoomOptions.onZoomComplete({chart: chartInstance});\n\t\t\t}\n\t\t};\n\n\t\tvar _scrollTimeout = null;\n\t\tchartInstance.$zoom._wheelHandler = function(event) {\n\t\t\t// Prevent the event from triggering the default behavior (eg. Content scrolling).\n\t\t\tif (event.cancelable) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\t// Firefox always fires the wheel event twice:\n\t\t\t// First without the delta and right after that once with the delta properties.\n\t\t\tif (typeof event.deltaY === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar rect = event.target.getBoundingClientRect();\n\t\t\tvar offsetX = event.clientX - rect.left;\n\t\t\tvar offsetY = event.clientY - rect.top;\n\n\t\t\tvar center = {\n\t\t\t\tx: offsetX,\n\t\t\t\ty: offsetY\n\t\t\t};\n\n\t\t\tvar zoomOptions = chartInstance.$zoom._options.zoom;\n\t\t\tvar speedPercent = zoomOptions.speed;\n\n\t\t\tif (event.deltaY >= 0) {\n\t\t\t\tspeedPercent = -speedPercent;\n\t\t\t}\n\t\t\tdoZoom(chartInstance, 1 + speedPercent, 1 + speedPercent, center);\n\n\t\t\tclearTimeout(_scrollTimeout);\n\t\t\t_scrollTimeout = setTimeout(function() {\n\t\t\t\tif (typeof zoomOptions.onZoomComplete === 'function') {\n\t\t\t\t\tzoomOptions.onZoomComplete({chart: chartInstance});\n\t\t\t\t}\n\t\t\t}, 250);\n\t\t};\n\n\t\tif (Hammer) {\n\t\t\tvar mc = new Hammer.Manager(node);\n\t\t\tmc.add(new Hammer.Pinch());\n\t\t\tmc.add(new Hammer.Pan({\n\t\t\t\tthreshold: panThreshold\n\t\t\t}));\n\n\t\t\t// Hammer reports the total scaling. We need the incremental amount\n\t\t\tvar currentPinchScaling;\n\t\t\tvar handlePinch = function(e) {\n\t\t\t\tvar diff = 1 / (currentPinchScaling) * e.scale;\n\t\t\t\tvar rect = e.target.getBoundingClientRect();\n\t\t\t\tvar offsetX = e.center.x - rect.left;\n\t\t\t\tvar offsetY = e.center.y - rect.top;\n\t\t\t\tvar center = {\n\t\t\t\t\tx: offsetX,\n\t\t\t\t\ty: offsetY\n\t\t\t\t};\n\n\t\t\t\t// fingers position difference\n\t\t\t\tvar x = Math.abs(e.pointers[0].clientX - e.pointers[1].clientX);\n\t\t\t\tvar y = Math.abs(e.pointers[0].clientY - e.pointers[1].clientY);\n\n\t\t\t\t// diagonal fingers will change both (xy) axes\n\t\t\t\tvar p = x / y;\n\t\t\t\tvar xy;\n\t\t\t\tif (p > 0.3 && p < 1.7) {\n\t\t\t\t\txy = 'xy';\n\t\t\t\t} else if (x > y) {\n\t\t\t\t\txy = 'x'; // x axis\n\t\t\t\t} else {\n\t\t\t\t\txy = 'y'; // y axis\n\t\t\t\t}\n\n\t\t\t\tdoZoom(chartInstance, diff, diff, center, xy);\n\n\t\t\t\tvar zoomOptions = chartInstance.$zoom._options.zoom;\n\t\t\t\tif (typeof zoomOptions.onZoomComplete === 'function') {\n\t\t\t\t\tzoomOptions.onZoomComplete({chart: chartInstance});\n\t\t\t\t}\n\n\t\t\t\t// Keep track of overall scale\n\t\t\t\tcurrentPinchScaling = e.scale;\n\t\t\t};\n\n\t\t\tmc.on('pinchstart', function() {\n\t\t\t\tcurrentPinchScaling = 1; // reset tracker\n\t\t\t});\n\t\t\tmc.on('pinch', handlePinch);\n\t\t\tmc.on('pinchend', function(e) {\n\t\t\t\thandlePinch(e);\n\t\t\t\tcurrentPinchScaling = null; // reset\n\t\t\t\tzoomNS.zoomCumulativeDelta = 0;\n\t\t\t});\n\n\t\t\tvar currentDeltaX = null;\n\t\t\tvar currentDeltaY = null;\n\t\t\tvar panning = false;\n\t\t\tvar handlePan = function(e) {\n\t\t\t\tif (currentDeltaX !== null && currentDeltaY !== null) {\n\t\t\t\t\tpanning = true;\n\t\t\t\t\tvar deltaX = e.deltaX - currentDeltaX;\n\t\t\t\t\tvar deltaY = e.deltaY - currentDeltaY;\n\t\t\t\t\tcurrentDeltaX = e.deltaX;\n\t\t\t\t\tcurrentDeltaY = e.deltaY;\n\t\t\t\t\tdoPan(chartInstance, deltaX, deltaY);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmc.on('panstart', function(e) {\n\t\t\t\tcurrentDeltaX = 0;\n\t\t\t\tcurrentDeltaY = 0;\n\t\t\t\thandlePan(e);\n\t\t\t});\n\t\t\tmc.on('panmove', handlePan);\n\t\t\tmc.on('panend', function() {\n\t\t\t\tcurrentDeltaX = null;\n\t\t\t\tcurrentDeltaY = null;\n\t\t\t\tzoomNS.panCumulativeDelta = 0;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tpanning = false;\n\t\t\t\t}, 500);\n\n\t\t\t\tvar panOptions = chartInstance.$zoom._options.pan;\n\t\t\t\tif (typeof panOptions.onPanComplete === 'function') {\n\t\t\t\t\tpanOptions.onPanComplete({chart: chartInstance});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tchartInstance.$zoom._ghostClickHandler = function(e) {\n\t\t\t\tif (panning && e.cancelable) {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t};\n\t\t\tnode.addEventListener('click', chartInstance.$zoom._ghostClickHandler);\n\n\t\t\tchartInstance._mc = mc;\n\t\t}\n\t},\n\n\tbeforeDatasetsDraw: function(chartInstance) {\n\t\tvar ctx = chartInstance.ctx;\n\n\t\tif (chartInstance.$zoom._dragZoomEnd) {\n\t\t\tvar xAxis = getXAxis(chartInstance);\n\t\t\tvar yAxis = getYAxis(chartInstance);\n\t\t\tvar beginPoint = chartInstance.$zoom._dragZoomStart;\n\t\t\tvar endPoint = chartInstance.$zoom._dragZoomEnd;\n\n\t\t\tvar startX = xAxis.left;\n\t\t\tvar endX = xAxis.right;\n\t\t\tvar startY = yAxis.top;\n\t\t\tvar endY = yAxis.bottom;\n\n\t\t\tif (directionEnabled(chartInstance.$zoom._options.zoom.mode, 'x', chartInstance)) {\n\t\t\t\tvar offsetX = beginPoint.target.getBoundingClientRect().left;\n\t\t\t\tstartX = Math.min(beginPoint.clientX, endPoint.clientX) - offsetX;\n\t\t\t\tendX = Math.max(beginPoint.clientX, endPoint.clientX) - offsetX;\n\t\t\t}\n\n\t\t\tif (directionEnabled(chartInstance.$zoom._options.zoom.mode, 'y', chartInstance)) {\n\t\t\t\tvar offsetY = beginPoint.target.getBoundingClientRect().top;\n\t\t\t\tstartY = Math.min(beginPoint.clientY, endPoint.clientY) - offsetY;\n\t\t\t\tendY = Math.max(beginPoint.clientY, endPoint.clientY) - offsetY;\n\t\t\t}\n\n\t\t\tvar rectWidth = endX - startX;\n\t\t\tvar rectHeight = endY - startY;\n\t\t\tvar dragOptions = chartInstance.$zoom._options.zoom.drag;\n\n\t\t\tctx.save();\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n\t\t\tctx.fillRect(startX, startY, rectWidth, rectHeight);\n\n\t\t\tif (dragOptions.borderWidth > 0) {\n\t\t\t\tctx.lineWidth = dragOptions.borderWidth;\n\t\t\t\tctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n\t\t\t\tctx.strokeRect(startX, startY, rectWidth, rectHeight);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\tdestroy: function(chartInstance) {\n\t\tif (!chartInstance.$zoom) {\n\t\t\treturn;\n\t\t}\n\t\tvar props = chartInstance.$zoom;\n\t\tvar node = props._node;\n\n\t\tnode.removeEventListener('mousedown', props._mouseDownHandler);\n\t\tnode.removeEventListener('mousemove', props._mouseMoveHandler);\n\t\tnode.ownerDocument.removeEventListener('mouseup', props._mouseUpHandler);\n\t\tnode.removeEventListener('wheel', props._wheelHandler);\n\t\tnode.removeEventListener('click', props._ghostClickHandler);\n\n\t\tdelete chartInstance.$zoom;\n\n\t\tvar mc = chartInstance._mc;\n\t\tif (mc) {\n\t\t\tmc.remove('pinchstart');\n\t\t\tmc.remove('pinch');\n\t\t\tmc.remove('pinchend');\n\t\t\tmc.remove('panstart');\n\t\t\tmc.remove('pan');\n\t\t\tmc.remove('panend');\n\t\t\tmc.destroy();\n\t\t}\n\t}\n};\n\nChart.plugins.register(zoomPlugin);\n\nreturn zoomPlugin;\n\n})));\n","module.exports = \"<div>\\n  <ion-card class=\\\"welcome-card\\\">\\n    <ion-card-header>\\n      <!-- <ion-card-subtitle>{{title}}</ion-card-subtitle> -->\\n      <ion-card-title>{{ data.device }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <!-- <div style=\\\"width: 100%; overflow-x: auto;overflow-y:hidden\\\">\\n        <div style=\\\"width: 3000px; height: 100%\\\">\\n          <canvas #canvas height=\\\"100%\\\" width=\\\"3000\\\"></canvas>\\n        </div>\\n      </div> -->\\n      <!-- \\n      <div class=\\\"chartWrapper\\\">\\n        <div class=\\\"chartAreaWrapper\\\">\\n          <div class=\\\"chartAreaWrapper2\\\">\\n              <canvas id=\\\"myChart\\\"></canvas>\\n          </div>\\n        </div>\\n          \\n          <canvas id=\\\"myChartAxis\\\" height=\\\"300\\\" width=\\\"0\\\"></canvas>\\n          \\n      </div> -->\\n\\n      <!-- <div #scrollView class=\\\"scrolling-wrapper\\\">\\n        <div class=\\\"card\\\">\\n          <canvas #canvas height=\\\"400\\\" width=\\\"3000\\\" style=\\\"pointer-events: none;\\\"></canvas>\\n        </div>\\n      </div> -->\\n\\n      <canvas #canvas></canvas>\\n    </ion-card-content>\\n  </ion-card>\\n</div>\"","module.exports = \".chartWrapper {\\n  position: relative; }\\n\\n.chartWrapper > canvas {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  pointer-events: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.chartAreaWrapper {\\n  width: 600px;\\n  overflow-x: scroll; }\\n\\n.scrolling-wrapper {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap;\\n  pointer-events: auto; }\\n\\n.scrolling-wrapper .card {\\n    display: inline-block; }\\n\\n.chart-top {\\n  position: relative;\\n  z-index: 100; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94aWFuZ3dlaS9Eb2N1bWVudHMvSU9OSUNfUFJPSkVDVF9NQUlOL3NyYy9hcHAvc2hhcmVkL2NhbnZhcy9jYW52YXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxrQkFBa0I7RUFDbEIsT0FBTztFQUNQLE1BQU07RUFDTixvQkFBb0I7RUFDcEIseUJBQWlCO0tBQWpCLHNCQUFpQjtNQUFqQixxQkFBaUI7VUFBakIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksWUFBWTtFQUNaLGtCQUFrQixFQUFBOztBQUd0QjtFQUNJLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLG9CQUFvQixFQUFBOztBQUp4QjtJQU9NLHFCQUFxQixFQUFBOztBQUkzQjtFQUNJLGtCQUFrQjtFQUdsQixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY2FudmFzL2NhbnZhcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydFdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmNoYXJ0V3JhcHBlciA+IGNhbnZhcyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG4uY2hhcnRBcmVhV3JhcHBlciB7XG4gICAgd2lkdGg6IDYwMHB4O1xuICAgIG92ZXJmbG93LXg6IHNjcm9sbDtcbn1cblxuLnNjcm9sbGluZy13cmFwcGVyIHtcbiAgICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgXG4gICAgLmNhcmQge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgfVxuXG4uY2hhcnQtdG9wIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLy8gbGVmdDogMHB4O1xuICAgIC8vIHRvcDogMHB4O1xuICAgIHotaW5kZXg6IDEwMDtcbn0iXX0= */\"","import { Component, OnInit, Input, ViewChild, NgModule, VERSION, AfterViewInit } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser'\nimport { Chart } from 'chart.js';\nimport 'chartjs-plugin-zoom';\nimport { config } from 'src/app/data-model/constant.model';\nimport { BaseService } from 'src/app/services/base.service';\n\n@Component({\n  selector: 'chart-canvas',\n  templateUrl: './canvas.component.html',\n  styleUrls: ['./canvas.component.scss'],\n})\nexport class CanvasComponent implements OnInit {\n\n  @Input() data;\n  @Input() title;\n  @ViewChild('canvas') canvas;\n\n  chart: any\n\n\n  constructor(private service: BaseService) {\n\n  }\n\n  ngOnInit() {\n\n    //https://github.com/chartjs/Chart.js/issues/2958#issuecomment-261949718\n\n    // var canvas: any = document.getElementById(\"myChart\");\n    // var ctx = canvas.getContext(\"2d\");\n\n    // var chart = {\n    //   options: {\n    //     responsive: true,\n    //     maintainAspectRatio: false,\n    //     animation: {\n\n    //       onComplete: function (animation) {\n    //         var sourceCanvas = myLiveChart.chart.canvas;\n    //         var copyWidth = myLiveChart.scales['y-axis-0'].width - 10;\n    //         var copyHeight = myLiveChart.scales['y-axis-0'].height + myLiveChart.scales['y-axis-0'].top + 10;\n    //         var canvass: any = document.getElementById(\"myChartAxis\");\n    //         var targetCtx = canvass.getContext(\"2d\");\n    //         targetCtx.canvas.width = copyWidth;\n    //         targetCtx.drawImage(sourceCanvas, 0, 0, copyWidth, copyHeight, 0, 0, copyWidth, copyHeight);\n    //       }\n    //     }\n    //   },\n    //   type: 'bar',\n    //   data: {\n    //     labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    //     datasets: [\n    //       {\n    //         label: \"My First dataset\",\n    //         fillColor: \"rgba(220,220,220,0.2)\",\n    //         strokeColor: \"rgba(220,220,220,1)\",\n    //         pointColor: \"rgba(220,220,220,1)\",\n    //         pointStrokeColor: \"#fff\",\n    //         pointHighlightFill: \"#fff\",\n    //         pointHighlightStroke: \"rgba(220,220,220,1)\",\n    //         data: [65, 59, 80, 81, 56, 55, 40]\n    //       }\n    //     ]\n    //   }\n    // };\n\n    // var myLiveChart = new Chart(ctx, chart);\n\n\n    // for(var x=0;x<100;x++) {\n    // myLiveChart.data.datasets[0].data.push(Math.random() * 100);\n    // myLiveChart.data.labels.push(\"Test\");\n    // var newwidth = $('.chartAreaWrapper2').width() +60;\n    // $('.chartAreaWrapper2').width(newwidth);\n    // }\n\n    this.createBarChart(this.data);\n\n  }\n\n  createBarChart(dataInput: any) {\n\n    //register custom positioner\n    Chart.Tooltip.positioners.custom = function (elements, position) {\n      //debugger;\n      return {\n        x: position.x,\n        y: elements[0]._view.base - (elements[0].height() + elements[1].height())\n      }\n    }\n\n    let usageChart = {\n      scales: {\n        xAxes: [{\n          barPercentage: 0.9,\n          gridLines: {\n            offsetGridLines: true\n          },\n          stacked: true\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          },\n          stacked: true\n        }]\n      },\n      plugins: {\n        zoom: {\n          // Container for pan options\n          pan: {\n            // Boolean to enable panning\n            enabled: true,\n\n            // Panning directions. Remove the appropriate direction to disable\n            // Eg. 'y' would only allow panning in the y direction\n            // A function that is called as the user is panning and returns the\n            // available directions can also be used:\n            //   mode: function({ chart }) {\n            //     return 'xy';\n            //   },\n            mode: 'xy',\n\n            rangeMin: {\n              // Format of min pan range depends on scale type\n              x: null,\n              y: null\n            },\n            rangeMax: {\n              // Format of max pan range depends on scale type\n              x: null,\n              y: null\n            },\n\n            // Function called while the user is panning\n            onPan: function ({ chart }) { config.log(`I'm panning!!!`); },\n            // Function called once panning is completed\n            onPanComplete: function ({ chart }) { config.log(`I was panned!!!`); }\n          },\n\n          // Container for zoom options\n          zoom: {\n            // Boolean to enable zooming\n            enabled: true,\n\n            // Enable drag-to-zoom behavior\n            drag: true,\n\n            // Drag-to-zoom effect can be customized\n            // drag: {\n            // \t borderColor: 'rgba(225,225,225,0.3)'\n            // \t borderWidth: 5,\n            // \t backgroundColor: 'rgb(225,225,225)',\n            // \t animationDuration: 0\n            // },\n\n            // Zooming directions. Remove the appropriate direction to disable\n            // Eg. 'y' would only allow zooming in the y direction\n            // A function that is called as the user is zooming and returns the\n            // available directions can also be used:\n            //   mode: function({ chart }) {\n            //     return 'xy';\n            //   },\n            mode: 'xy',\n\n            rangeMin: {\n              // Format of min zoom range depends on scale type\n              x: null,\n              y: null\n            },\n            rangeMax: {\n              // Format of max zoom range depends on scale type\n              x: null,\n              y: null\n            },\n\n            // Speed of zoom via mouse wheel\n            // (percentage of zoom on a wheel event)\n            speed: 0.1,\n\n            // Function called while the user is zooming\n            onZoom: function ({ chart }) { config.log(`I'm zooming!!!`); },\n            // Function called once zooming is completed\n            onZoomComplete: function ({ chart }) { config.log(`I was zoomed!!!`); }\n          }\n        }\n      }\n    };\n\n    let impressionChart = {\n      scales: {\n        xAxes: [{\n          barPercentage: 0.9,\n          gridLines: {\n            offsetGridLines: true\n          },\n          stacked: true\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n          },\n          stacked: true\n        }]\n      },\n      tooltips: {\n        caretY: 0,\n        yAlign: 'bottom',\n        mode: 'label',\n        position: 'nearest',\n        callbacks: {\n          afterTitle: function () {\n            window.total = 0;\n          },\n          label: function (tooltipItem, data) {\n            var corporation = data.datasets[tooltipItem.datasetIndex].label;\n            var valor = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n            window.total += valor;\n            return corporation + \": \" + valor.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n          },\n          footer: function () {\n            return \"TOTAL: \" + window.total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n          }\n        },\n      },\n      plugins: {\n        zoom: {\n          // Container for pan options\n          pan: {\n            // Boolean to enable panning\n            enabled: true,\n\n            // Panning directions. Remove the appropriate direction to disable\n            // Eg. 'y' would only allow panning in the y direction\n            // A function that is called as the user is panning and returns the\n            // available directions can also be used:\n            //   mode: function({ chart }) {\n            //     return 'xy';\n            //   },\n            mode: 'xy',\n\n            rangeMin: {\n              // Format of min pan range depends on scale type\n              x: null,\n              y: null\n            },\n            rangeMax: {\n              // Format of max pan range depends on scale type\n              x: null,\n              y: null\n            },\n\n            // Function called while the user is panning\n            onPan: function ({ chart }) { config.log(`I'm panning!!!`); },\n            // Function called once panning is completed\n            onPanComplete: function ({ chart }) { config.log(`I was panned!!!`); }\n          },\n\n          // Container for zoom options\n          zoom: {\n            // Boolean to enable zooming\n            enabled: true,\n\n            // Enable drag-to-zoom behavior\n            drag: true,\n\n            // Drag-to-zoom effect can be customized\n            // drag: {\n            // \t borderColor: 'rgba(225,225,225,0.3)'\n            // \t borderWidth: 5,\n            // \t backgroundColor: 'rgb(225,225,225)',\n            // \t animationDuration: 0\n            // },\n\n            // Zooming directions. Remove the appropriate direction to disable\n            // Eg. 'y' would only allow zooming in the y direction\n            // A function that is called as the user is zooming and returns the\n            // available directions can also be used:\n            //   mode: function({ chart }) {\n            //     return 'xy';\n            //   },\n            mode: 'xy',\n\n            rangeMin: {\n              // Format of min zoom range depends on scale type\n              x: null,\n              y: null\n            },\n            rangeMax: {\n              // Format of max zoom range depends on scale type\n              x: null,\n              y: null\n            },\n\n            // Speed of zoom via mouse wheel\n            // (percentage of zoom on a wheel event)\n            speed: 0.1,\n\n            // Function called while the user is zooming\n            onZoom: function ({ chart }) { config.log(`I'm zooming!!!`); },\n            // Function called once zooming is completed\n            onZoomComplete: function ({ chart }) { config.log(`I was zoomed!!!`); }\n          }\n        }\n      }\n    };\n\n    let strTitle = String(this.title)\n\n    let ctx = this.canvas.nativeElement\n    var weight = this.service.isDesktop() ? 0.25 : 0.52;\n    ctx.height = this.service.screenSize()['screenHeight']*weight\n    this.chart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: JSON.parse(dataInput[\"data\"]).labels,\n        datasets: JSON.parse(dataInput[\"data\"]).datasets\n      },\n      options: strTitle.includes('impression') || strTitle.includes('wip') || strTitle.includes('output') ? impressionChart : usageChart\n      // {\n      // plugins: {\n      //   stacked100: { enable: true }\n      // },\n      //   scales: {\n      //     yAxes: [{\n      //         ticks: {\n      //             min: 0,\n      //             max: 100,\n      //             callback: function(value) {\n      //                 return value + \"%\"\n      //             }\n      //         },\n      //         stacked: true,\n      //         scaleLabel: {\n      //             display: true,\n      //             labelString: \"Percentage\"\n      //         }\n      //     }],\n      //     xAxes: [{\n      //       stacked: true\n      //     }]\n      //  }\n      // }\n    });\n\n    // Chart.defaults.global.showTooltips = false;\n\n  }\n\n  myFunction() {\n    config.log(\"Hello world!\");\n  }\n\n  yHandler() {\n    config.log(\"123 123 123\");\n  }\n\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{modalTitle}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label><strong>Select All</strong></ion-label>\\n      <ion-checkbox slot=\\\"start\\\" [(ngModel)]=\\\"masterCheck\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n        (click)=\\\"checkMaster()\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of checkBoxList\\\">\\n      <ion-label>{{item.machine.name}}</ion-label>\\n      <ion-checkbox slot=\\\"start\\\" [(ngModel)]=\\\"item.isChecked\\\" (ionChange)=\\\"checkEvent()\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n\\n</ion-content>\\n\\n<ion-footer>\\n\\t<ion-toolbar position=\\\"bottom\\\">\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        <ion-button color=\\\"danger\\\" (click)=\\\"cancelModal()\\\">Cancel</ion-button>\\n        <ion-button (click)=\\\"closeModal()\\\">Select</ion-button>\\n      </ion-col>\\n    </ion-row>\\n\\t</ion-toolbar>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9zZWxlY3QtbWFjaGluZS9zZWxlY3QtbWFjaGluZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ViewChild, NgModule, VERSION, AfterViewInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-select-machine',\n  templateUrl: './select-machine.component.html',\n  styleUrls: ['./select-machine.component.scss'],\n})\nexport class SelectMachineComponent implements OnInit {\n\n  modalTitle:string;\n  // modelId:number;\n\n  isSelectMachine:boolean = false;\n  isIndeterminate:boolean;\n  masterCheck:boolean;\n  checkBoxList:any;\n\n  constructor(private modalController: ModalController, private navParams: NavParams) {\n\n  }\n\n  ngOnInit() {\n    this.checkBoxList = this.navParams.data.checkBoxList;\n    this.modalTitle = this.navParams.data.paramTitle;\n    this.checkEvent();\n  }\n\n  async cancelModal() {\n    // const onClosedData: string = \"Wrapped Up!\";\n    await this.modalController.dismiss();\n  }\n\n  async closeModal() {\n    // const onClosedData: string = \"Wrapped Up!\";\n    await this.modalController.dismiss(this.checkBoxList);\n  }\n\n  checkMaster() {\n    setTimeout(()=>{\n      this.checkBoxList.forEach(obj => {\n        obj.isChecked = this.masterCheck;\n      });\n    });\n  }\n \n  checkEvent() {\n    const totalItems = this.checkBoxList.length;\n    let checked = 0;\n    this.checkBoxList.map(obj => {\n      if (obj.isChecked) checked++;\n    });\n    if (checked > 0 && checked < totalItems) {\n      //If even one item is checked but not all\n      this.isIndeterminate = true;\n      this.masterCheck = false;\n    } else if (checked == totalItems) {\n      //If all are checked\n      this.masterCheck = true;\n      this.isIndeterminate = false;\n    } else {\n      //If none is checked\n      this.isIndeterminate = false;\n      this.masterCheck = false;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CanvasComponent } from './canvas/canvas.component';\nimport { IonicModule } from '@ionic/angular';\nimport { SelectMachineComponent } from './select-machine/select-machine.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [CanvasComponent, SelectMachineComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule\n  ],\n  entryComponents: [SelectMachineComponent],\n  exports: [CanvasComponent]\n})\nexport class SharedModule { }\n"],"sourceRoot":""}