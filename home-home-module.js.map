{"version":3,"sources":["webpack:///./src/app/data-model/base.model.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["export class LoginModel {\n    constructor(\n        public username: any,\n        public password: any) {\n        }\n}\n\nexport type DeviceModel = AccessTokenModel\nexport type DeptModel = AccessTokenModel\nexport type DownModel = AccessTokenModel\nexport class AccessTokenModel {\n    constructor(\n        public accesstoken?: any) {\n        }\n}\n\nexport class UsageOrImpressionModel {\n    constructor(\n        public accesstoken?: any,\n        public device?: any, //GL373\n        public datefrom?: any, //2019-01-01\n        public dateto?: any) { //2019-12-31\n        }\n}\n\nexport class ProcessModel {\n    constructor(\n        public accesstoken: any = '',\n        public dept: Array<any> = []) { // [1,2,3,5]\n        }\n}\n\nexport class WIPModel {\n    constructor(\n        public type: any, // WIP = 1, Output = 2\n        public accesstoken?: any,\n        public date?: any, // 2020-02-13\n        public dept?: Array<any>, // [1,2,3,5]\n        public process?: Array<any>) { // ['CLDR', 'CREA', 'GLUE']\n        }\n}\n\nexport class AccumulatedOutputModel {\n    constructor(\n        public accesstoken?: any,\n        public date?: any, // 2020-02-13\n        public dept?: Array<any>, // [1,2,3,5]\n        public process?: Array<any>,\n        public accumulated?: number) { // ['CLDR', 'CREA', 'GLUE']\n        }\n}\n\nexport class EmailModel {\n    constructor(\n        public type: any, // WIP = 1, Output = 2\n        public accesstoken?: any,\n        public date?: any, // 2020-02-13\n        public dept?: Array<any>, // [1,2,3,5]\n        public process?: Array<any>, // ['CLDR', 'CREA', 'GLUE']\n        public email?: String) {\n        }\n}\n\nexport class DownloadCSVModel {\n    constructor(\n        public type: any, // WIP = 1, Output = 2\n        public accesstoken?: any,\n        public date?: any, // 2020-02-13\n        public dept?: Array<any>, // [1,2,3,5]\n        public process?: Array<any>) { // ['CLDR', 'CREA', 'GLUE']\n        }\n}\n\nexport class MachineModel {\n    constructor(\n        public accesstoken: any = '',\n        public process?: Array<any>) { // [1,2,3,5]\n        }\n}\n\nexport class TransfileModel {\n    constructor(\n        public accesstoken: any = '',\n        public machineid?: string) {\n    }\n}\n\nexport class IssueMDownModel {\n    constructor(\n        public accesstoken: any = '',\n        public transfileID?: string) {\n    }\n}\n\nexport class InsertMDownDetailModel {\n    constructor(\n        public accesstoken: any = '',\n        public machinedownid?: string,\n        public machineid?: string,\n        public remark?: Array<string>,\n        public problemid?: Array<number>) {\n    }\n}\n\nexport class SMSModel {\n    constructor(\n        public accesstoken: any = '',\n        public processcode?: string,\n        public machineid?: string) {\n    }\n}\n\nexport class ProblemModel {\n    constructor(\n        public accesstoken: any = '',\n        public processcode?: string) {\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Clock-in Details\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" [hidden]=\\\"true\\\">\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"closeMenu()\\\">\\n        <ion-icon name=\\\"list-box\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons>\\n    <!-- <ion-buttons slot=\\\"end\\\">\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"exportEmail()\\\">\\n        <ion-icon name=\\\"share\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card class=\\\"welcome-card\\\" *ngIf=\\\"isOk == false\\\">\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Employee ID</ion-label>\\n        <ion-input type=\\\"text\\\" (keypress)=\\\"numberOnlyValidation($event)\\\" maxlength=\\\"10\\\" required [(ngModel)]=\\\"strEmpID\\\"\\n          name=\\\"empID\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isEmpIDFound == true\\\">\\n        <ion-label position=\\\"floating\\\">Job No (HARDCODED)</ion-label>\\n        <ion-input type=\\\"text\\\" value=\\\"{{strJobNo}}\\\" required disabled [(ngModel)]=\\\"strJobNo\\\" name=\\\"jobNo\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isEmpIDFound == true\\\">\\n        <ion-label position=\\\"floating\\\">Job Qty (HARDCODED)</ion-label>\\n        <ion-input type=\\\"text\\\" value=\\\"{{strJobQty}}\\\" required disabled [(ngModel)]=\\\"strJobQty\\\" name=\\\"jobQty\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isEmpIDFound == true\\\">\\n        <ion-label position=\\\"floating\\\">Process Code (HARDCODED)</ion-label>\\n        <ion-input type=\\\"text\\\" value=\\\"{{strProcessCode}}\\\" required disabled [(ngModel)]=\\\"strProcessCode\\\"\\n          name=\\\"processCode\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"isEmpIDFound == true\\\">\\n        <ion-label position=\\\"floating\\\">Machine (HARDCODED)</ion-label>\\n        <ion-input type=\\\"text\\\" value=\\\"{{strMachineID}}\\\" required disabled [(ngModel)]=\\\"strMachineID\\\" name=\\\"machineID\\\">\\n        </ion-input>\\n      </ion-item>\\n      <!-- <ion-item *ngIf=\\\"strEmpID.toString().length >= 5\\\">\\n        <ion-label>Machine</ion-label>\\n        <ion-select *ngIf=\\\"arrMachines\\\"[(ngModel)]=\\\"selectedMachine\\\" interface=\\\"action-sheet\\\" name=\\\"machineID\\\" multiple=\\\"false\\\" placeholder=\\\"Tap to select..\\\" [selectedText]=\\\"selectedMachine\\\" (ionChange)=\\\"onMachineSelected()\\\"\\n          required>\\n          <ion-select-option *ngFor=\\\"let machine of arrMachines\\\" value=\\\"{{machine.name}}\\\">\\n            {{machine.name}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item> -->\\n\\n\\n      <!-- <ion-grid>\\n        <ion-item> -->\\n          <ion-row>\\n            <ion-col col-6>\\n              <ion-button [disabled]=\\\"form.invalid || strEmpID.toString().length < 5\\\" type=\\\"button\\\" color=\\\"danger\\\" class=\\\"obj-center\\\" (click)=\\\"onClockOutClicked()\\\">\\n                Clock-out\\n              </ion-button>\\n            </ion-col>\\n            <ion-col col-6>\\n              <ion-button [disabled]=\\\"form.invalid || strEmpID.toString().length < 5\\\" type=\\\"submit\\\" color=\\\"success\\\" class=\\\"obj-center\\\">\\n                {{strButtonTitle}}\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        <!-- </ion-item>\\n      </ion-grid> -->\\n\\n\\n    </form>\\n\\n  </ion-card>\\n\\n</ion-content>\\n\\n<ion-content [hidden]=\\\"true\\\">\\n  <p *ngIf=\\\"barcodeData\\\">\\n    Scanned: {{barcodeData['text']}} | {{barcodeData['format']}}\\n  </p>\\n</ion-content>\"","module.exports = \"ion-grid {\\n  padding: 2px;\\n  height: 100%; }\\n\\nion-row {\\n  padding: 1px;\\n  height: auto;\\n  min-height: 20vh; }\\n\\nion-col {\\n  margin: 4px;\\n  background: gray;\\n  display: inline-grid; }\\n\\nion-col h1 {\\n    text-align: center;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center; }\\n\\n.obj-center {\\n  display: flex !important;\\n  justify-content: center !important;\\n  align-items: center !important; }\\n\\nh1 {\\n  color: black;\\n  text-shadow: 0px 2px 2px white; }\\n\\nion-select {\\n  max-width: 100% !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94aWFuZ3dlaS9Eb2N1bWVudHMvSU9OSUNfUFJPSkVDVF9NQUlOL3NyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVk7RUFDWixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksWUFBWTtFQUNaLFlBQVk7RUFDWixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFFSSxXQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLG9CQUFvQixFQUFBOztBQUp4QjtJQVFRLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQixFQUFBOztBQUszQjtFQUNJLHdCQUF3QjtFQUN4QixrQ0FBa0M7RUFDbEMsOEJBQThCLEVBQUE7O0FBR2xDO0VBQ0ksWUFBVztFQUNYLDhCQUE4QixFQUFBOztBQUdsQztFQUNJLDBCQUNKLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWdyaWQge1xuICAgIHBhZGRpbmc6IDJweDtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbmlvbi1yb3cge1xuICAgIHBhZGRpbmc6IDFweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWluLWhlaWdodDogMjB2aDtcbn1cblxuaW9uLWNvbCB7XG4gICAgLy8gcGFkZGluZzogMnB4O1xuICAgIG1hcmdpbjo0cHg7XG4gICAgYmFja2dyb3VuZDogZ3JheTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZ3JpZDtcbiAgICAvLyBib3JkZXI6IHRoaW5rIHNvbGlkIGJsYWNrO1xuXG4gICAgaDEge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAvLyBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcbiAgICB9XG59XG5cbi5vYmotY2VudGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbmgxIHtcbiAgICBjb2xvcjpibGFjaztcbiAgICB0ZXh0LXNoYWRvdzogMHB4IDJweCAycHggd2hpdGU7XG59XG5cbmlvbi1zZWxlY3Qge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50XG59XG5cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MenuController, ModalController, LoadingController, NavController, AlertController } from '@ionic/angular';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { BaseService } from '../services/base.service';\nimport { DeviceModel, AccessTokenModel, DownModel } from '../data-model/base.model';\nimport { Constants, config } from '../data-model/constant.model';\nimport { Storage } from '@ionic/storage';\nimport { BasePagePage } from '../shared/base-page/base-page.page';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage extends BasePagePage implements OnInit {\n\n  strEmpID: string = '00001';\n  strJobNo: string = 'KY20040122';\n  strJobQty: string = '2';\n  strProcessCode: string = \"DCUT\"\n  strMachineID: string = 'GL371';\n  strButtonTitle: string = 'Clock-in';\n  barcodeData: any;\n  // arrButtonTitle: Array<any> = [\n  //   'Loading',\n  //   'PM',\n  //   'Setting',\n  //   'Resetting',\n  //   'Quality Problem',\n  //   'Break Time',\n  //   'Shift Change'\n  // ];\n  selectedMachine: string = '';\n  arrRow: Array<any> = [];\n  isOk: boolean = false;\n  isEmpIDFound: boolean = true;\n  deviceReqModel: DeviceModel = new AccessTokenModel();\n  machineDownReasonModel: DownModel = new AccessTokenModel();\n  arrMachines: Array<any> = [];\n  arrDownReasons: Array<any> = [];\n  arrSelectedMachines: Array<any> = [];\n  arrSelectedMachiness: string = '';\n\n  constructor(\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    public navCtrl: NavController,\n    private service: BaseService,\n    private storage: Storage,\n    public modalController: ModalController,\n    private route: ActivatedRoute,\n    private barcodeScanner: BarcodeScanner\n  ) {\n\n    super(loadingCtrl, alertCtrl);\n\n    this.storage.get(Constants.c_ACCESS_TOKEN).then((accessToken) => {\n\n      this.deviceReqModel.accesstoken = accessToken;\n\n      this.machineDownReasonModel.accesstoken = accessToken;\n\n      this.service.callWebService(Constants.k_GET_DEVICE, this.deviceReqModel, (res) => {\n\n        this.arrMachines = JSON.parse(res.data);\n\n        config.log(\"arrMachines: \", this.arrMachines);\n\n      });\n\n    });\n\n  }\n\n  ngOnInit() {\n\n    // while (this.arrButtonTitle.length > 0)\n    //   this.arrRow.push(this.arrButtonTitle.splice(0, 2));\n\n    // config.log(\"arraysarrays: \", this.arrRow);\n\n    // if (this.route.snapshot.data['special']) {\n\n    //   this.strEmpID = this.route.snapshot.data['special'];\n\n    // }\n\n  }\n\n  closeMenu() {\n\n    this.barcodeScanner.scan().then(barcodeData => {\n      this.barcodeData = barcodeData;\n      config.log('Barcode data', this.barcodeData);\n    }).catch(err => {\n      config.log('Error', err);\n    });\n\n  }\n\n  onButtonClicked(e: Event) {\n    config.log('onButtonClicked: ', e.srcElement['innerText']);\n  }\n\n  onClockOutClicked() {\n    this.navCtrl.navigateBack(\"/home/clock-in-history\");\n  }\n\n  // async presentModal() {\n  //   const modal = await this.modalController.create({\n  //     component: HomePage,\n  //     componentProps: {\n  //       \"checkBoxList\": this.checkBoxList,\n  //       \"paramTitle\": \"Select Machine\"\n  //     }\n  //   });\n\n  //   modal.onDiddismissLoading().then((dataReturned) => {\n  //     if (dataReturned !== null && dataReturned.data !== undefined) {\n  //       // this.dataReturned = dataReturned.data;\n\n  //       this.arrSelectedMachines = [];\n\n  //       dataReturned.data.forEach(element => {\n  //         if (element.isChecked) {\n  //           this.arrSelectedMachines.push(element.machine.value)\n  //         }\n  //       });\n  //       config.log('--- Modal SELECTED Data: ', this.arrSelectedMachines);\n\n  //       // this.optionsFn();\n\n  //     }\n  //   });\n\n  //   return await modal.presentLoading();\n  // }\n\n  optionsFn() {\n    config.log(\"HAHA\");\n  }\n\n  numberOnlyValidation(event: any) {\n    const pattern = /[0-9]/;\n    let inputChar = String.fromCharCode(event.charCode);\n\n    if (!pattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n\n  onMachineSelected() {\n    config.log('selectedMachine: ', this.selectedMachine);\n  }\n\n  onSubmit(form) {\n\n    config.log('datatatat: ', form.value);\n\n    // this.service.getWebService(Constants.k_GET_MACHINE_DOWN_REASON, this.machineDownReasonModel, (res) => {\n\n    //   this.arrDownReasons = JSON.parse(res.data);\n\n    //   config.log('arrDown: ', this.arrDownReasons);\n\n    //   while (this.arrDownReasons.length > 0)\n    //     this.arrRow.push(this.arrDownReasons.splice(0, 2));\n\n    //   this.isOk = true;\n\n    // });\n\n    if (this.isEmpIDFound == true) {\n      // this.isOk = true;\n      this.navCtrl.navigateForward('/home/clock-in');\n    } else {\n      this.isEmpIDFound = true;\n      this.strButtonTitle = 'Clock-in';\n    }\n\n  }\n\n}\n"],"sourceRoot":""}