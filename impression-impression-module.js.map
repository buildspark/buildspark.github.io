{"version":3,"sources":["webpack:///./src/app/impression/impression.module.ts","webpack:///./src/app/impression/impression.page.html","webpack:///./src/app/impression/impression.page.scss","webpack:///./src/app/impression/impression.page.ts"],"names":[],"mappings":"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","file":"impression-impression-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { ImpressionPage } from './impression.page';\nimport { from } from 'rxjs';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    A11yModule,\n    HttpClientModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ImpressionPage\n      }\n    ])\n  ],\n  declarations: [ImpressionPage]\n})\nexport class ImpressionPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Impression\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"selectMachine()\\\">\\n        <ion-icon name=\\\"list-box\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- <ion-select [interfaceOptions]=\\\"customActionSheetOptions\\\" multiple=\\\"true\\\" cancelText=\\\"Cancel\\\" okText=\\\"Select\\\" #popSelect\\n  [hidden]=\\\"true\\\" [(ngModel)]=\\\"arrSelectedMachines\\\" (ionChange)=\\\"optionsFn()\\\">\\n  <ion-select-option *ngFor=\\\"let machine of arrMachines\\\" value=\\\"{{machine.value}}\\\">{{machine.name}}\\n  </ion-select-option>\\n</ion-select> -->\\n\\n<ion-content>\\n\\n  <mat-tab-group #tabGroup [selectedIndex]=\\\"selectedTab\\\" (selectedTabChange)=\\\"onTabChanged($event)\\\">\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">query_builder</mat-icon>\\n        Daily\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"DD MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"dailyReqModel.datefrom\\\" (ionChange)=\\\"onFromDailyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"DD MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"dailyReqModel.dateto\\\" (ionChange)=\\\"onToDailyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewDailyDateClicked()\\\">View data</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrDailyCharts;\\\" [data]=\\\"chart\\\" [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">calendar_today</mat-icon>\\n        Monthly\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"monthlyReqModel.datefrom\\\" (ionChange)=\\\"onFromMonthlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"MMM YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"monthlyReqModel.dateto\\\" (ionChange)=\\\"onToMonthlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewMonthlyDateClicked()\\\">View data</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrMonthlyCharts;\\\" [data]=\\\"chart\\\"  [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n\\n    <mat-tab>\\n      <ng-template mat-tab-label>\\n        <mat-icon class=\\\"example-tab-icon\\\">trending_up</mat-icon>\\n        Yearly\\n      </ng-template>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              From\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"yearlyReqModel.datefrom\\\" (ionChange)=\\\"onFromYearlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              To\\n              <ion-item>\\n                <ion-datetime displayFormat=\\\"YYYY\\\" min={{minDate}} max={{currentDate}}\\n                  [(ngModel)]=\\\"yearlyReqModel.dateto\\\" (ionChange)=\\\"onToYearlyUsageSelected($event)\\\">\\n                </ion-datetime>\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"center-ver\\\" size=\\\"auto\\\">\\n            <ion-button (click)=\\\"onViewYearlyDateClicked()\\\">View data</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <chart-canvas *ngFor=\\\"let chart of arrYearlyCharts;\\\" [data]=\\\"chart\\\"  [title]=\\\"strChartTitle\\\"></chart-canvas>\\n\\n    </mat-tab>\\n  </mat-tab-group>\\n\\n</ion-content>\"","module.exports = \".welcome-card img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\np.text-center {\\n  text-align: center; }\\n\\n.example-tab-icon {\\n  margin-right: 8px; }\\n\\n.center-ver {\\n  display: flex !important;\\n  align-content: center !important;\\n  align-items: center !important;\\n  float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94aWFuZ3dlaS9Eb2N1bWVudHMvSU9OSUNfUFJPSkVDVF9NQUlOL3NyYy9hcHAvaW1wcmVzc2lvbi9pbXByZXNzaW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSx3QkFBdUI7RUFDdkIsZ0NBQStCO0VBQy9CLDhCQUE2QjtFQUM3QixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9pbXByZXNzaW9uL2ltcHJlc3Npb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndlbGNvbWUtY2FyZCBpbWcge1xuICBtYXgtaGVpZ2h0OiAzNXZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5wLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZXhhbXBsZS10YWItaWNvbiB7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufVxuXG4uY2VudGVyLXZlciB7XG4gIGRpc3BsYXk6IGZsZXghaW1wb3J0YW50O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXIhaW1wb3J0YW50O1xuICBhbGlnbi1pdGVtczogY2VudGVyIWltcG9ydGFudDtcbiAgZmxvYXQ6IHJpZ2h0O1xufSJdfQ== */\"","import { Component, ViewChild, ViewChildren, AfterViewInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { BaseService } from '../services/base.service';\nimport { Constants, StatusCode } from '../data-model/constant.model';\nimport { DeviceModel, UsageOrImpressionModel, AccessTokenModel } from '../data-model/base.model';\nimport { Storage } from '@ionic/storage';\nimport * as moment from \"moment\";\nimport { IonSelect, AlertController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Observable, of, throwError } from 'rxjs';\nimport { forkJoin } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { stacked100 } from 'chartjs-plugin-stacked100';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { SelectMachineComponent } from '../shared/select-machine/select-machine.component';\nimport { BasePagePage } from '../shared/base-page/base-page.page';\n\nrequire('chartjs-plugin-stacked100');\n\n@Component({\n  selector: 'impression',\n  templateUrl: 'impression.page.html',\n  styleUrls: ['impression.page.scss'],\n})\nexport class ImpressionPage extends BasePagePage {\n\n  @ViewChild('tabGroup') tabGroup;\n  @ViewChild('popSelect') selectPop: IonSelect;\n\n  strChartTitle: string = '';\n  hrzBars5: any;\n  arrDailyCharts: any[] = [];\n  arrMonthlyCharts: any[] = [];\n  arrYearlyCharts: any[] = [];\n  customActionSheetOptions: any = {\n    header: 'Machines',\n    subHeader: 'Select the machine(s) you want to view'\n  };\n  arrMachines: Array<any> = [];\n  arrSelectedMachines: Array<any> = [];\n  selectedTab: any = 0;\n  accessToken: string = '';\n  deviceReqModel: DeviceModel = new AccessTokenModel();\n  dailyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n  monthlyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n  yearlyReqModel: UsageOrImpressionModel = new UsageOrImpressionModel();\n\n  currentDate: string = moment().format(Constants.c_DATE_FORMAT);\n  // yesterdayDate: string = moment().add(-1, 'days').format(\"YYYY-MM-DD\");\n  minDate: string = Constants.c_MIN_DATE_2019;\n\n  dataReturned: any;\n  checkBoxList: Array<any> = [];\n\n  constructor(\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    private service: BaseService,\n    private storage: Storage,\n    public modalController: ModalController,\n    private router: Router) {\n\n    super(loadingCtrl, alertCtrl);\n\n    this.strChartTitle = this.router.url.replace(/[^a-zA-Z0-9 ]/g, \"\");\n\n    this.storage.get(Constants.c_ACCESS_TOKEN).then((accessToken) => {\n\n      this.accessToken = accessToken;\n\n      this.deviceReqModel.accesstoken = accessToken;\n      this.dailyReqModel.accesstoken = accessToken;\n      this.monthlyReqModel.accesstoken = accessToken;\n      this.yearlyReqModel.accesstoken = accessToken;\n\n      this.preprareDateAvailableData(this.currentDate);\n\n      this.service.presentLoading();\n\n      this.service.callWebService(Constants.k_GET_DEVICE, this.deviceReqModel, (res) => {\n\n        if (res.status_code == StatusCode.Success) {\n\n          this.arrMachines = JSON.parse(res.data);\n\n          this.arrMachines.forEach(element => {\n            if (element === this.arrMachines[0]) {\n              this.checkBoxList.push({ 'machine': element, 'isChecked': true })\n            } else {\n              this.checkBoxList.push({ 'machine': element, 'isChecked': false })\n            }\n          });\n\n          this.arrSelectedMachines.push(this.arrMachines[0].value);\n\n          this.dailyReqModel.device = this.arrSelectedMachines.join(\",\");\n          this.monthlyReqModel.device = this.arrSelectedMachines.join(\",\");\n          this.yearlyReqModel.device = this.arrSelectedMachines.join(\",\");\n\n\n          this.callWSToReloadPagesData();\n\n        } else {\n\n          this.service.dismissLoading();\n\n        }\n\n      });\n\n    });\n\n  }\n\n  ionViewDidEnter() {\n\n  }\n\n  callWSToReloadPagesData() {\n\n    let response1 = this.service.callWebService(Constants.k_DAILY_IMP, this.dailyReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrDailyCharts = JSON.parse(res.data);\n      }\n    });\n\n    let response2 = this.service.callWebService(Constants.k_MONTHLY_IMP, this.monthlyReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrMonthlyCharts = JSON.parse(res.data);\n      }\n    });\n\n    let response3 = this.service.callWebService(Constants.k_YEARLY_IMP, this.yearlyReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrYearlyCharts = JSON.parse(res.data);\n      }\n    });\n\n    this.service.callWebServiceSimultaneously([response1, response2, response3]).finally(()=> {\n      this.service.dismissLoading();\n    });\n\n  }\n\n  onFromDailyUsageSelected(item: any) {\n    let from = Date.parse(this.dailyReqModel.datefrom)\n    let to = Date.parse(this.dailyReqModel.dateto)\n    if (from > to) {\n      this.dailyReqModel.dateto = this.dailyReqModel.datefrom\n    }\n  }\n\n  onToDailyUsageSelected(item: any) {\n    let from = Date.parse(this.dailyReqModel.datefrom)\n    let to = Date.parse(this.dailyReqModel.dateto)\n    if (to < from) {\n      this.dailyReqModel.datefrom = this.dailyReqModel.dateto\n    }\n  }\n\n  onFromMonthlyUsageSelected(item: any) {\n    let from = Date.parse(this.monthlyReqModel.datefrom)\n    let to = Date.parse(this.monthlyReqModel.dateto)\n    if (from > to) {\n      this.monthlyReqModel.dateto = this.monthlyReqModel.datefrom\n    }\n  }\n\n  onToMonthlyUsageSelected(item: any) {\n    let from = Date.parse(this.monthlyReqModel.datefrom)\n    let to = Date.parse(this.monthlyReqModel.dateto)\n    if (to < from) {\n      this.monthlyReqModel.datefrom = this.monthlyReqModel.dateto\n    }\n  }\n\n  onFromYearlyUsageSelected(item: any) {\n    let from = Date.parse(this.yearlyReqModel.datefrom)\n    let to = Date.parse(this.yearlyReqModel.dateto)\n    if (from > to) {\n      this.yearlyReqModel.dateto = this.yearlyReqModel.datefrom\n    }\n  }\n\n  onToYearlyUsageSelected(item: any) {\n    let from = Date.parse(this.yearlyReqModel.datefrom)\n    let to = Date.parse(this.yearlyReqModel.dateto)\n    if (to < from) {\n      this.yearlyReqModel.datefrom = this.yearlyReqModel.dateto\n    }\n  }\n\n  selectMachine() {\n\n    // this.selectPop.open()\n\n    // this.service.getWebService(Constants.k_GET_DEVICE, this.deviceReqModel, (res) => {\n\n    //   this.arrMachines = JSON.parse(res.data);\n\n    //   // Use a timeout to gice some time to Angular\n    //   // to update the view. The amount of time is not\n    //   // important; it's just to run the code async\n    //   setTimeout(() => {\n\n    //     // Open the select\n    //     this.selectPop.open()\n\n    //   }, 100);\n\n    // });\n\n    this.presentModal()\n\n  }\n\n  optionsFn() {\n\n    console.log(\"optionsFnitem: \", this.arrSelectedMachines)\n\n    this.dailyReqModel.device = this.arrSelectedMachines.join(\",\");\n    this.monthlyReqModel.device = this.arrSelectedMachines.join(\",\");\n    this.yearlyReqModel.device = this.arrSelectedMachines.join(\",\");\n\n    this.callWSToReloadPagesData();\n\n  }\n\n  onTabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    console.log('tabChangeEvent => ', tabChangeEvent);\n    console.log('index => ', tabChangeEvent.index);\n    // this.optionsFn(null)\n  }\n\n  onViewDailyDateClicked() {\n\n    this.dailyReqModel.datefrom = this.standardDateTime(this.dailyReqModel.datefrom);\n    this.dailyReqModel.dateto = this.standardDateTime(this.dailyReqModel.dateto);\n\n    this.service.presentLoading();\n\n    this.service.callWebService(Constants.k_DAILY_IMP, this.dailyReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrDailyCharts = JSON.parse(res.data);\n      }\n      this.service.dismissLoading();\n    });\n\n  }\n\n  onViewMonthlyDateClicked() {\n\n    this.monthlyReqModel.datefrom = this.standardDateTime(this.monthlyReqModel.datefrom);\n    this.monthlyReqModel.dateto = this.standardDateTime(this.monthlyReqModel.dateto);\n\n    this.service.presentLoading();\n\n    this.service.callWebService(Constants.k_MONTHLY_IMP, this.monthlyReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrMonthlyCharts = JSON.parse(res.data);\n      }\n      this.service.dismissLoading();\n    });\n\n  }\n\n  onViewYearlyDateClicked() {\n\n    this.yearlyReqModel.datefrom = this.standardDateTime(this.yearlyReqModel.datefrom);\n    this.yearlyReqModel.dateto = this.standardDateTime(this.yearlyReqModel.dateto);\n\n    this.service.presentLoading();\n\n    this.service.callWebService(Constants.k_YEARLY_IMP, this.yearlyReqModel, (res) => {\n      if (res && res.data && res.data != '' && res.data != '-') {\n        this.arrYearlyCharts = JSON.parse(res.data);\n      }\n      this.service.dismissLoading();\n    });\n\n  }\n\n  random_rgb() {\n    var o = Math.round, r = Math.random, s = 255;\n    return 'rgb(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';\n  }\n\n  standardDateTime(dateString: string) {\n    return moment(dateString).format(\"YYYY-MM-DD\");\n  }\n\n  preprareDateAvailableData(currentDate: string) {\n\n    const strTodayDate: string = currentDate;\n    // const strTodayDate: string = \"2020-06-01\";\n    const todayDate = new Date(strTodayDate);\n\n    this.dailyReqModel.datefrom = this.standardDateTime(moment(strTodayDate).add(-1, 'days').format(Constants.c_DATE_FORMAT));\n    this.dailyReqModel.dateto = this.standardDateTime(moment(strTodayDate).add(-1, 'days').format(Constants.c_DATE_FORMAT));\n\n    var month: string;\n    if (todayDate.getDate() == 1) {\n      month = moment(todayDate).add(-1, 'months').format(Constants.c_DATE_FORMAT);\n    } else {\n      todayDate.setDate(1);\n      month = moment(todayDate).format(Constants.c_DATE_FORMAT);\n    }\n    this.monthlyReqModel.datefrom = this.standardDateTime(month);\n    this.monthlyReqModel.dateto = this.standardDateTime(month);\n\n    var year: string;\n    if (todayDate.getMonth() == 0) {\n      year = moment(todayDate).add(-1, 'years').format(Constants.c_DATE_FORMAT);\n    } else {\n      todayDate.setMonth(0);\n      year = moment(todayDate).format(Constants.c_DATE_FORMAT);\n    }\n    this.yearlyReqModel.datefrom = this.standardDateTime(year);\n    this.yearlyReqModel.dateto = this.standardDateTime(year);\n\n  }\n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: SelectMachineComponent,\n      componentProps: {\n        \"checkBoxList\": this.checkBoxList,\n        \"paramTitle\": \"Select Machine\"\n      }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n      console.log('dataReturned: ', dataReturned);\n      if (dataReturned !== null && dataReturned.data !== undefined) {\n        // this.dataReturned = dataReturned.data;\n\n        this.arrSelectedMachines = [];\n\n        dataReturned.data.forEach(element => {\n          if (element.isChecked) {\n            this.arrSelectedMachines.push(element.machine.value)\n          }\n        });\n        console.log('--- Modal SELECTED Data: ', this.arrSelectedMachines);\n\n        this.optionsFn();\n\n      }\n    });\n\n    return await modal.present();\n  }\n\n\n}\n"],"sourceRoot":""}